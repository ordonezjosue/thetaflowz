{"ast":null,"code":"import { JsonTypeBuilder } from './json.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Awaited } from '../awaited/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { InstanceType } from '../instance-type/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Parameters } from '../parameters/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { RegExp } from '../regexp/index.mjs';\nimport { ReturnType } from '../return-type/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Void } from '../void/index.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nexport class JavaScriptTypeBuilder extends JsonTypeBuilder {\n  /** `[JavaScript]` Creates a AsyncIterator type */\n  AsyncIterator(items, options = {}) {\n    return AsyncIterator(items, options);\n  }\n  /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n  Awaited(schema, options = {}) {\n    return Awaited(schema, options);\n  }\n  /** `[JavaScript]` Creates a BigInt type */\n  BigInt(options = {}) {\n    return BigInt(options);\n  }\n  /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n  ConstructorParameters(schema, options = {}) {\n    return ConstructorParameters(schema, options);\n  }\n  /** `[JavaScript]` Creates a Constructor type */\n  Constructor(parameters, returns, options) {\n    return Constructor(parameters, returns, options);\n  }\n  /** `[JavaScript]` Creates a Date type */\n  Date(options = {}) {\n    return Date(options);\n  }\n  /** `[JavaScript]` Creates a Function type */\n  Function(parameters, returns, options) {\n    return FunctionType(parameters, returns, options);\n  }\n  /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n  InstanceType(schema, options = {}) {\n    return InstanceType(schema, options);\n  }\n  /** `[JavaScript]` Creates an Iterator type */\n  Iterator(items, options = {}) {\n    return Iterator(items, options);\n  }\n  /** `[JavaScript]` Extracts the Parameters from the given Function type */\n  Parameters(schema, options = {}) {\n    return Parameters(schema, options);\n  }\n  /** `[JavaScript]` Creates a Promise type */\n  Promise(item, options = {}) {\n    return Promise(item, options);\n  }\n  /** `[JavaScript]` Creates a RegExp type */\n  RegExp(unresolved, options = {}) {\n    return RegExp(unresolved, options);\n  }\n  /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n  ReturnType(schema, options = {}) {\n    return ReturnType(schema, options);\n  }\n  /** `[JavaScript]` Creates a Symbol type */\n  Symbol(options) {\n    return Symbol(options);\n  }\n  /** `[JavaScript]` Creates a Undefined type */\n  Undefined(options = {}) {\n    return Undefined(options);\n  }\n  /** `[JavaScript]` Creates a Uint8Array type */\n  Uint8Array(options = {}) {\n    return Uint8Array(options);\n  }\n  /** `[JavaScript]` Creates a Void type */\n  Void(options = {}) {\n    return Void(options);\n  }\n}","map":{"version":3,"names":["JsonTypeBuilder","AsyncIterator","Awaited","BigInt","Constructor","ConstructorParameters","Date","Function","FunctionType","InstanceType","Iterator","Parameters","Promise","RegExp","ReturnType","Symbol","Uint8Array","Undefined","Void","JavaScriptTypeBuilder","items","options","schema","parameters","returns","item","unresolved"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/type/javascript.mjs"],"sourcesContent":["import { JsonTypeBuilder } from './json.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Awaited } from '../awaited/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { InstanceType } from '../instance-type/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Parameters } from '../parameters/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { RegExp } from '../regexp/index.mjs';\nimport { ReturnType } from '../return-type/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Void } from '../void/index.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nexport class JavaScriptTypeBuilder extends JsonTypeBuilder {\n    /** `[JavaScript]` Creates a AsyncIterator type */\n    AsyncIterator(items, options = {}) {\n        return AsyncIterator(items, options);\n    }\n    /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n    Awaited(schema, options = {}) {\n        return Awaited(schema, options);\n    }\n    /** `[JavaScript]` Creates a BigInt type */\n    BigInt(options = {}) {\n        return BigInt(options);\n    }\n    /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n    ConstructorParameters(schema, options = {}) {\n        return ConstructorParameters(schema, options);\n    }\n    /** `[JavaScript]` Creates a Constructor type */\n    Constructor(parameters, returns, options) {\n        return Constructor(parameters, returns, options);\n    }\n    /** `[JavaScript]` Creates a Date type */\n    Date(options = {}) {\n        return Date(options);\n    }\n    /** `[JavaScript]` Creates a Function type */\n    Function(parameters, returns, options) {\n        return FunctionType(parameters, returns, options);\n    }\n    /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n    InstanceType(schema, options = {}) {\n        return InstanceType(schema, options);\n    }\n    /** `[JavaScript]` Creates an Iterator type */\n    Iterator(items, options = {}) {\n        return Iterator(items, options);\n    }\n    /** `[JavaScript]` Extracts the Parameters from the given Function type */\n    Parameters(schema, options = {}) {\n        return Parameters(schema, options);\n    }\n    /** `[JavaScript]` Creates a Promise type */\n    Promise(item, options = {}) {\n        return Promise(item, options);\n    }\n    /** `[JavaScript]` Creates a RegExp type */\n    RegExp(unresolved, options = {}) {\n        return RegExp(unresolved, options);\n    }\n    /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n    ReturnType(schema, options = {}) {\n        return ReturnType(schema, options);\n    }\n    /** `[JavaScript]` Creates a Symbol type */\n    Symbol(options) {\n        return Symbol(options);\n    }\n    /** `[JavaScript]` Creates a Undefined type */\n    Undefined(options = {}) {\n        return Undefined(options);\n    }\n    /** `[JavaScript]` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return Uint8Array(options);\n    }\n    /** `[JavaScript]` Creates a Void type */\n    Void(options = {}) {\n        return Void(options);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}