{"ast":null,"code":"// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsStandardObject, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Clonable\n// ------------------------------------------------------------------\nfunction ObjectType(value) {\n  const Acc = {};\n  for (const key of Object.getOwnPropertyNames(value)) {\n    Acc[key] = Clone(value[key]);\n  }\n  for (const key of Object.getOwnPropertySymbols(value)) {\n    Acc[key] = Clone(value[key]);\n  }\n  return Acc;\n}\nfunction ArrayType(value) {\n  return value.map(element => Clone(element));\n}\nfunction TypedArrayType(value) {\n  return value.slice();\n}\nfunction DateType(value) {\n  return new Date(value.toISOString());\n}\nfunction ValueType(value) {\n  return value;\n}\n// ------------------------------------------------------------------\n// Clone\n// ------------------------------------------------------------------\n/** Returns a clone of the given value */\nexport function Clone(value) {\n  if (IsArray(value)) return ArrayType(value);\n  if (IsDate(value)) return DateType(value);\n  if (IsStandardObject(value)) return ObjectType(value);\n  if (IsTypedArray(value)) return TypedArrayType(value);\n  if (IsValueType(value)) return ValueType(value);\n  throw new Error('ValueClone: Unable to clone value');\n}","map":{"version":3,"names":["IsArray","IsDate","IsStandardObject","IsTypedArray","IsValueType","ObjectType","value","Acc","key","Object","getOwnPropertyNames","Clone","getOwnPropertySymbols","ArrayType","map","element","TypedArrayType","slice","DateType","Date","toISOString","ValueType","Error"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs"],"sourcesContent":["// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsStandardObject, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Clonable\n// ------------------------------------------------------------------\nfunction ObjectType(value) {\n    const Acc = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    return Acc;\n}\nfunction ArrayType(value) {\n    return value.map((element) => Clone(element));\n}\nfunction TypedArrayType(value) {\n    return value.slice();\n}\nfunction DateType(value) {\n    return new Date(value.toISOString());\n}\nfunction ValueType(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Clone\n// ------------------------------------------------------------------\n/** Returns a clone of the given value */\nexport function Clone(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsStandardObject(value))\n        return ObjectType(value);\n    if (IsTypedArray(value))\n        return TypedArrayType(value);\n    if (IsValueType(value))\n        return ValueType(value);\n    throw new Error('ValueClone: Unable to clone value');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,WAAW,QAAQ,oBAAoB;AACjG;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAE;EACvB,MAAMC,GAAG,GAAG,CAAC,CAAC;EACd,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,mBAAmB,CAACJ,KAAK,CAAC,EAAE;IACjDC,GAAG,CAACC,GAAG,CAAC,GAAGG,KAAK,CAACL,KAAK,CAACE,GAAG,CAAC,CAAC;EAChC;EACA,KAAK,MAAMA,GAAG,IAAIC,MAAM,CAACG,qBAAqB,CAACN,KAAK,CAAC,EAAE;IACnDC,GAAG,CAACC,GAAG,CAAC,GAAGG,KAAK,CAACL,KAAK,CAACE,GAAG,CAAC,CAAC;EAChC;EACA,OAAOD,GAAG;AACd;AACA,SAASM,SAASA,CAACP,KAAK,EAAE;EACtB,OAAOA,KAAK,CAACQ,GAAG,CAAEC,OAAO,IAAKJ,KAAK,CAACI,OAAO,CAAC,CAAC;AACjD;AACA,SAASC,cAAcA,CAACV,KAAK,EAAE;EAC3B,OAAOA,KAAK,CAACW,KAAK,CAAC,CAAC;AACxB;AACA,SAASC,QAAQA,CAACZ,KAAK,EAAE;EACrB,OAAO,IAAIa,IAAI,CAACb,KAAK,CAACc,WAAW,CAAC,CAAC,CAAC;AACxC;AACA,SAASC,SAASA,CAACf,KAAK,EAAE;EACtB,OAAOA,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,KAAKA,CAACL,KAAK,EAAE;EACzB,IAAIN,OAAO,CAACM,KAAK,CAAC,EACd,OAAOO,SAAS,CAACP,KAAK,CAAC;EAC3B,IAAIL,MAAM,CAACK,KAAK,CAAC,EACb,OAAOY,QAAQ,CAACZ,KAAK,CAAC;EAC1B,IAAIJ,gBAAgB,CAACI,KAAK,CAAC,EACvB,OAAOD,UAAU,CAACC,KAAK,CAAC;EAC5B,IAAIH,YAAY,CAACG,KAAK,CAAC,EACnB,OAAOU,cAAc,CAACV,KAAK,CAAC;EAChC,IAAIF,WAAW,CAACE,KAAK,CAAC,EAClB,OAAOe,SAAS,CAACf,KAAK,CAAC;EAC3B,MAAM,IAAIgB,KAAK,CAAC,mCAAmC,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}