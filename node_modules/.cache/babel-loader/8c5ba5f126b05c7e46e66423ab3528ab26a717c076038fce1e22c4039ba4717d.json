{"ast":null,"code":"import { CloneType } from '../clone/type.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\n// Auto Tracked For Recursive Types without ID's\nlet Ordinal = 0;\n/** `[Json]` Creates a Recursive type */\nexport function Recursive(callback, options = {}) {\n  if (IsUndefined(options.$id)) options.$id = `T${Ordinal++}`;\n  const thisType = callback({\n    [Kind]: 'This',\n    $ref: `${options.$id}`\n  });\n  thisType.$id = options.$id;\n  // prettier-ignore\n  return CloneType({\n    ...options,\n    [Hint]: 'Recursive',\n    ...thisType\n  });\n}","map":{"version":3,"names":["CloneType","IsUndefined","Kind","Hint","Ordinal","Recursive","callback","options","$id","thisType","$ref"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs"],"sourcesContent":["import { CloneType } from '../clone/type.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\n// Auto Tracked For Recursive Types without ID's\nlet Ordinal = 0;\n/** `[Json]` Creates a Recursive type */\nexport function Recursive(callback, options = {}) {\n    if (IsUndefined(options.$id))\n        options.$id = `T${Ordinal++}`;\n    const thisType = callback({ [Kind]: 'This', $ref: `${options.$id}` });\n    thisType.$id = options.$id;\n    // prettier-ignore\n    return CloneType({ ...options, [Hint]: 'Recursive', ...thisType });\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,IAAI,EAAEC,IAAI,QAAQ,sBAAsB;AACjD;AACA,IAAIC,OAAO,GAAG,CAAC;AACf;AACA,OAAO,SAASC,SAASA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC9C,IAAIN,WAAW,CAACM,OAAO,CAACC,GAAG,CAAC,EACxBD,OAAO,CAACC,GAAG,GAAG,IAAIJ,OAAO,EAAE,EAAE;EACjC,MAAMK,QAAQ,GAAGH,QAAQ,CAAC;IAAE,CAACJ,IAAI,GAAG,MAAM;IAAEQ,IAAI,EAAE,GAAGH,OAAO,CAACC,GAAG;EAAG,CAAC,CAAC;EACrEC,QAAQ,CAACD,GAAG,GAAGD,OAAO,CAACC,GAAG;EAC1B;EACA,OAAOR,SAAS,CAAC;IAAE,GAAGO,OAAO;IAAE,CAACJ,IAAI,GAAG,WAAW;IAAE,GAAGM;EAAS,CAAC,CAAC;AACtE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}