{"ast":null,"code":"import { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsUndefined } from '../guard/index.mjs';\n// prettier-ignore\nfunction FromArray(schema, references) {\n  return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n  return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n  return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some(schema => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n  return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some(schema => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n  return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some(schema => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n  return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromNot(schema, references) {\n  return IsTransform(schema) || Visit(schema.not, references);\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n  return IsTransform(schema) || Object.values(schema.properties).some(schema => Visit(schema, references)) || IsSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references);\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n  return IsTransform(schema) || Visit(schema.item, references);\n}\n// prettier-ignore\nfunction FromRecord(schema, references) {\n  const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n  const property = schema.patternProperties[pattern];\n  return IsTransform(schema) || Visit(property, references) || IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties);\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n  if (IsTransform(schema)) return true;\n  return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromThis(schema, references) {\n  if (IsTransform(schema)) return true;\n  return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n  return IsTransform(schema) || !IsUndefined(schema.items) && schema.items.some(schema => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n  return IsTransform(schema) || schema.anyOf.some(schema => Visit(schema, references));\n}\n// prettier-ignore\nfunction Visit(schema, references) {\n  const references_ = IsString(schema.$id) ? [...references, schema] : references;\n  const schema_ = schema;\n  if (schema.$id && visited.has(schema.$id)) return false;\n  if (schema.$id) visited.add(schema.$id);\n  switch (schema[Kind]) {\n    case 'Array':\n      return FromArray(schema_, references_);\n    case 'AsyncIterator':\n      return FromAsyncIterator(schema_, references_);\n    case 'Constructor':\n      return FromConstructor(schema_, references_);\n    case 'Function':\n      return FromFunction(schema_, references_);\n    case 'Intersect':\n      return FromIntersect(schema_, references_);\n    case 'Iterator':\n      return FromIterator(schema_, references_);\n    case 'Not':\n      return FromNot(schema_, references_);\n    case 'Object':\n      return FromObject(schema_, references_);\n    case 'Promise':\n      return FromPromise(schema_, references_);\n    case 'Record':\n      return FromRecord(schema_, references_);\n    case 'Ref':\n      return FromRef(schema_, references_);\n    case 'This':\n      return FromThis(schema_, references_);\n    case 'Tuple':\n      return FromTuple(schema_, references_);\n    case 'Union':\n      return FromUnion(schema_, references_);\n    default:\n      return IsTransform(schema);\n  }\n}\nconst visited = new Set();\n/** Returns true if this schema contains a transform codec */\nexport function HasTransform(schema, references) {\n  visited.clear();\n  return Visit(schema, references);\n}","map":{"version":3,"names":["Deref","Kind","IsTransform","IsSchema","IsString","IsUndefined","FromArray","schema","references","Visit","items","FromAsyncIterator","FromConstructor","returns","parameters","some","FromFunction","FromIntersect","unevaluatedProperties","allOf","FromIterator","FromNot","not","FromObject","Object","values","properties","additionalProperties","FromPromise","item","FromRecord","pattern","getOwnPropertyNames","patternProperties","property","FromRef","FromThis","FromTuple","FromUnion","anyOf","references_","$id","schema_","visited","has","add","Set","HasTransform","clear"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs"],"sourcesContent":["import { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsUndefined } from '../guard/index.mjs';\n// prettier-ignore\nfunction FromArray(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromNot(schema, references) {\n    return IsTransform(schema) || Visit(schema.not, references);\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    return (IsTransform(schema) ||\n        Object.values(schema.properties).some((schema) => Visit(schema, references)) ||\n        (IsSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references)));\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    return IsTransform(schema) || Visit(schema.item, references);\n}\n// prettier-ignore\nfunction FromRecord(schema, references) {\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[pattern];\n    return IsTransform(schema) || Visit(property, references) || (IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties));\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromThis(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    return IsTransform(schema) || (!IsUndefined(schema.items) && schema.items.some((schema) => Visit(schema, references)));\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    return IsTransform(schema) || schema.anyOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction Visit(schema, references) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    if (schema.$id && visited.has(schema.$id))\n        return false;\n    if (schema.$id)\n        visited.add(schema.$id);\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        default:\n            return IsTransform(schema);\n    }\n}\nconst visited = new Set();\n/** Returns true if this schema contains a transform codec */\nexport function HasTransform(schema, references) {\n    visited.clear();\n    return Visit(schema, references);\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,IAAI,QAAQ,8BAA8B;AACnD;AACA;AACA;AACA,SAASC,WAAW,EAAEC,QAAQ,QAAQ,2BAA2B;AACjE;AACA;AACA;AACA,SAASC,QAAQ,EAAEC,WAAW,QAAQ,oBAAoB;AAC1D;AACA,SAASC,SAASA,CAACC,MAAM,EAAEC,UAAU,EAAE;EACnC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACG,KAAK,EAAEF,UAAU,CAAC;AACjE;AACA;AACA,SAASG,iBAAiBA,CAACJ,MAAM,EAAEC,UAAU,EAAE;EAC3C,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACG,KAAK,EAAEF,UAAU,CAAC;AACjE;AACA;AACA,SAASI,eAAeA,CAACL,MAAM,EAAEC,UAAU,EAAE;EACzC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACM,OAAO,EAAEL,UAAU,CAAC,IAAID,MAAM,CAACO,UAAU,CAACC,IAAI,CAAER,MAAM,IAAKE,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC,CAAC;AACpI;AACA;AACA,SAASQ,YAAYA,CAACT,MAAM,EAAEC,UAAU,EAAE;EACtC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACM,OAAO,EAAEL,UAAU,CAAC,IAAID,MAAM,CAACO,UAAU,CAACC,IAAI,CAAER,MAAM,IAAKE,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC,CAAC;AACpI;AACA;AACA,SAASS,aAAaA,CAACV,MAAM,EAAEC,UAAU,EAAE;EACvC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIL,WAAW,CAACK,MAAM,CAACW,qBAAqB,CAAC,IAAIX,MAAM,CAACY,KAAK,CAACJ,IAAI,CAAER,MAAM,IAAKE,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC,CAAC;AACvI;AACA;AACA,SAASY,YAAYA,CAACb,MAAM,EAAEC,UAAU,EAAE;EACtC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACG,KAAK,EAAEF,UAAU,CAAC;AACjE;AACA;AACA,SAASa,OAAOA,CAACd,MAAM,EAAEC,UAAU,EAAE;EACjC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACe,GAAG,EAAEd,UAAU,CAAC;AAC/D;AACA;AACA,SAASe,UAAUA,CAAChB,MAAM,EAAEC,UAAU,EAAE;EACpC,OAAQN,WAAW,CAACK,MAAM,CAAC,IACvBiB,MAAM,CAACC,MAAM,CAAClB,MAAM,CAACmB,UAAU,CAAC,CAACX,IAAI,CAAER,MAAM,IAAKE,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC,CAAC,IAC3EL,QAAQ,CAACI,MAAM,CAACoB,oBAAoB,CAAC,IAAIlB,KAAK,CAACF,MAAM,CAACoB,oBAAoB,EAAEnB,UAAU,CAAE;AACjG;AACA;AACA,SAASoB,WAAWA,CAACrB,MAAM,EAAEC,UAAU,EAAE;EACrC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACF,MAAM,CAACsB,IAAI,EAAErB,UAAU,CAAC;AAChE;AACA;AACA,SAASsB,UAAUA,CAACvB,MAAM,EAAEC,UAAU,EAAE;EACpC,MAAMuB,OAAO,GAAGP,MAAM,CAACQ,mBAAmB,CAACzB,MAAM,CAAC0B,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvE,MAAMC,QAAQ,GAAG3B,MAAM,CAAC0B,iBAAiB,CAACF,OAAO,CAAC;EAClD,OAAO7B,WAAW,CAACK,MAAM,CAAC,IAAIE,KAAK,CAACyB,QAAQ,EAAE1B,UAAU,CAAC,IAAKL,QAAQ,CAACI,MAAM,CAACoB,oBAAoB,CAAC,IAAIzB,WAAW,CAACK,MAAM,CAACoB,oBAAoB,CAAE;AACpJ;AACA;AACA,SAASQ,OAAOA,CAAC5B,MAAM,EAAEC,UAAU,EAAE;EACjC,IAAIN,WAAW,CAACK,MAAM,CAAC,EACnB,OAAO,IAAI;EACf,OAAOE,KAAK,CAACT,KAAK,CAACO,MAAM,EAAEC,UAAU,CAAC,EAAEA,UAAU,CAAC;AACvD;AACA;AACA,SAAS4B,QAAQA,CAAC7B,MAAM,EAAEC,UAAU,EAAE;EAClC,IAAIN,WAAW,CAACK,MAAM,CAAC,EACnB,OAAO,IAAI;EACf,OAAOE,KAAK,CAACT,KAAK,CAACO,MAAM,EAAEC,UAAU,CAAC,EAAEA,UAAU,CAAC;AACvD;AACA;AACA,SAAS6B,SAASA,CAAC9B,MAAM,EAAEC,UAAU,EAAE;EACnC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAK,CAACF,WAAW,CAACE,MAAM,CAACG,KAAK,CAAC,IAAIH,MAAM,CAACG,KAAK,CAACK,IAAI,CAAER,MAAM,IAAKE,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC,CAAE;AAC1H;AACA;AACA,SAAS8B,SAASA,CAAC/B,MAAM,EAAEC,UAAU,EAAE;EACnC,OAAON,WAAW,CAACK,MAAM,CAAC,IAAIA,MAAM,CAACgC,KAAK,CAACxB,IAAI,CAAER,MAAM,IAAKE,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC,CAAC;AAC1F;AACA;AACA,SAASC,KAAKA,CAACF,MAAM,EAAEC,UAAU,EAAE;EAC/B,MAAMgC,WAAW,GAAGpC,QAAQ,CAACG,MAAM,CAACkC,GAAG,CAAC,GAAG,CAAC,GAAGjC,UAAU,EAAED,MAAM,CAAC,GAAGC,UAAU;EAC/E,MAAMkC,OAAO,GAAGnC,MAAM;EACtB,IAAIA,MAAM,CAACkC,GAAG,IAAIE,OAAO,CAACC,GAAG,CAACrC,MAAM,CAACkC,GAAG,CAAC,EACrC,OAAO,KAAK;EAChB,IAAIlC,MAAM,CAACkC,GAAG,EACVE,OAAO,CAACE,GAAG,CAACtC,MAAM,CAACkC,GAAG,CAAC;EAC3B,QAAQlC,MAAM,CAACN,IAAI,CAAC;IAChB,KAAK,OAAO;MACR,OAAOK,SAAS,CAACoC,OAAO,EAAEF,WAAW,CAAC;IAC1C,KAAK,eAAe;MAChB,OAAO7B,iBAAiB,CAAC+B,OAAO,EAAEF,WAAW,CAAC;IAClD,KAAK,aAAa;MACd,OAAO5B,eAAe,CAAC8B,OAAO,EAAEF,WAAW,CAAC;IAChD,KAAK,UAAU;MACX,OAAOxB,YAAY,CAAC0B,OAAO,EAAEF,WAAW,CAAC;IAC7C,KAAK,WAAW;MACZ,OAAOvB,aAAa,CAACyB,OAAO,EAAEF,WAAW,CAAC;IAC9C,KAAK,UAAU;MACX,OAAOpB,YAAY,CAACsB,OAAO,EAAEF,WAAW,CAAC;IAC7C,KAAK,KAAK;MACN,OAAOnB,OAAO,CAACqB,OAAO,EAAEF,WAAW,CAAC;IACxC,KAAK,QAAQ;MACT,OAAOjB,UAAU,CAACmB,OAAO,EAAEF,WAAW,CAAC;IAC3C,KAAK,SAAS;MACV,OAAOZ,WAAW,CAACc,OAAO,EAAEF,WAAW,CAAC;IAC5C,KAAK,QAAQ;MACT,OAAOV,UAAU,CAACY,OAAO,EAAEF,WAAW,CAAC;IAC3C,KAAK,KAAK;MACN,OAAOL,OAAO,CAACO,OAAO,EAAEF,WAAW,CAAC;IACxC,KAAK,MAAM;MACP,OAAOJ,QAAQ,CAACM,OAAO,EAAEF,WAAW,CAAC;IACzC,KAAK,OAAO;MACR,OAAOH,SAAS,CAACK,OAAO,EAAEF,WAAW,CAAC;IAC1C,KAAK,OAAO;MACR,OAAOF,SAAS,CAACI,OAAO,EAAEF,WAAW,CAAC;IAC1C;MACI,OAAOtC,WAAW,CAACK,MAAM,CAAC;EAClC;AACJ;AACA,MAAMoC,OAAO,GAAG,IAAIG,GAAG,CAAC,CAAC;AACzB;AACA,OAAO,SAASC,YAAYA,CAACxC,MAAM,EAAEC,UAAU,EAAE;EAC7CmC,OAAO,CAACK,KAAK,CAAC,CAAC;EACf,OAAOvC,KAAK,CAACF,MAAM,EAAEC,UAAU,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}