{"ast":null,"code":"import { SetUnionMany, SetIntersectMany } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsRecord } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n  const Acc = [];\n  for (const L of T) Acc.push(KeyOfPropertyKeys(L));\n  return Acc;\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n  const C = FromRest(T);\n  const R = SetUnionMany(C);\n  return R;\n}\n// prettier-ignore\nfunction FromUnion(T) {\n  const C = FromRest(T);\n  const R = SetIntersectMany(C);\n  return R;\n}\n// prettier-ignore\nfunction FromTuple(T) {\n  return T.map((_, I) => I.toString());\n}\n// prettier-ignore\nfunction FromArray(_) {\n  return ['[number]'];\n}\n// prettier-ignore\nfunction FromProperties(T) {\n  return globalThis.Object.getOwnPropertyNames(T);\n}\n// ------------------------------------------------------------------\n// FromPatternProperties\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPatternProperties(patternProperties) {\n  if (!includePatternProperties) return [];\n  const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);\n  return patternPropertyKeys.map(key => {\n    return key[0] === '^' && key[key.length - 1] === '$' ? key.slice(1, key.length - 1) : key;\n  });\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema. */\n// prettier-ignore\nexport function KeyOfPropertyKeys(T) {\n  return IsIntersect(T) ? FromIntersect(T.allOf) : IsUnion(T) ? FromUnion(T.anyOf) : IsTuple(T) ? FromTuple(T.items ?? []) : IsArray(T) ? FromArray(T.items) : IsObject(T) ? FromProperties(T.properties) : IsRecord(T) ? FromPatternProperties(T.patternProperties) : [];\n}\n// ----------------------------------------------------------------\n// KeyOfPattern\n// ----------------------------------------------------------------\nlet includePatternProperties = false;\n/** Returns a regular expression pattern derived from the given TSchema */\nexport function KeyOfPattern(schema) {\n  includePatternProperties = true;\n  const keys = KeyOfPropertyKeys(schema);\n  includePatternProperties = false;\n  const pattern = keys.map(key => `(${key})`);\n  return `^(${pattern.join('|')})$`;\n}","map":{"version":3,"names":["SetUnionMany","SetIntersectMany","IsIntersect","IsUnion","IsTuple","IsArray","IsObject","IsRecord","FromRest","T","Acc","L","push","KeyOfPropertyKeys","FromIntersect","C","R","FromUnion","FromTuple","map","_","I","toString","FromArray","FromProperties","globalThis","Object","getOwnPropertyNames","FromPatternProperties","patternProperties","includePatternProperties","patternPropertyKeys","key","length","slice","allOf","anyOf","items","properties","KeyOfPattern","schema","keys","pattern","join"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs"],"sourcesContent":["import { SetUnionMany, SetIntersectMany } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsRecord } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(KeyOfPropertyKeys(L));\n    return Acc;\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n    const C = FromRest(T);\n    const R = SetUnionMany(C);\n    return R;\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    const C = FromRest(T);\n    const R = SetIntersectMany(C);\n    return R;\n}\n// prettier-ignore\nfunction FromTuple(T) {\n    return T.map((_, I) => I.toString());\n}\n// prettier-ignore\nfunction FromArray(_) {\n    return (['[number]']);\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    return (globalThis.Object.getOwnPropertyNames(T));\n}\n// ------------------------------------------------------------------\n// FromPatternProperties\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPatternProperties(patternProperties) {\n    if (!includePatternProperties)\n        return [];\n    const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);\n    return patternPropertyKeys.map(key => {\n        return (key[0] === '^' && key[key.length - 1] === '$')\n            ? key.slice(1, key.length - 1)\n            : key;\n    });\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema. */\n// prettier-ignore\nexport function KeyOfPropertyKeys(T) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf) :\n        IsUnion(T) ? FromUnion(T.anyOf) :\n            IsTuple(T) ? FromTuple(T.items ?? []) :\n                IsArray(T) ? FromArray(T.items) :\n                    IsObject(T) ? FromProperties(T.properties) :\n                        IsRecord(T) ? FromPatternProperties(T.patternProperties) :\n                            []);\n}\n// ----------------------------------------------------------------\n// KeyOfPattern\n// ----------------------------------------------------------------\nlet includePatternProperties = false;\n/** Returns a regular expression pattern derived from the given TSchema */\nexport function KeyOfPattern(schema) {\n    includePatternProperties = true;\n    const keys = KeyOfPropertyKeys(schema);\n    includePatternProperties = false;\n    const pattern = keys.map((key) => `(${key})`);\n    return `^(${pattern.join('|')})$`;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}