{"ast":null,"code":"import { Type } from \"@sinclair/typebox\";\nexport const QueueOptionsSchema = Type.Object({\n  // TODO: adds func type to json schema which is not supported\n  //_queue?: Queue;\n  concurrency: Type.Optional(Type.Number()),\n  timeout: Type.Optional(Type.Number()) // TODO\n}, {\n  additionalProperties: false,\n  title: \"QueueOptions\"\n});\nexport default class Queue {\n  constructor(opts = {}) {\n    this.concurrency = 1;\n    this._running = 0;\n    this._queue = [];\n    if (opts.concurrency) this.concurrency = opts.concurrency;\n  }\n  runNext() {\n    const job = this._queue.shift();\n    if (!job) return;\n    this._running++;\n    job.func().then(result => job.resolve(result)).catch(error => job.reject(error)).finally(() => {\n      this._running--;\n      this.checkQueue();\n    });\n  }\n  checkQueue() {\n    if (this._running < this.concurrency) this.runNext();\n  }\n  add(func) {\n    return new Promise((resolve, reject) => {\n      this._queue.push({\n        func,\n        resolve,\n        reject\n      });\n      this.checkQueue();\n    });\n  }\n}","map":{"version":3,"names":["Type","QueueOptionsSchema","Object","concurrency","Optional","Number","timeout","additionalProperties","title","Queue","constructor","opts","_running","_queue","runNext","job","shift","func","then","result","resolve","catch","error","reject","finally","checkQueue","add","Promise","push"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/dist/esm/src/lib/queue.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nexport const QueueOptionsSchema = Type.Object({\n    // TODO: adds func type to json schema which is not supported\n    //_queue?: Queue;\n    concurrency: Type.Optional(Type.Number()),\n    timeout: Type.Optional(Type.Number()), // TODO\n}, {\n    additionalProperties: false,\n    title: \"QueueOptions\",\n});\nexport default class Queue {\n    constructor(opts = {}) {\n        this.concurrency = 1;\n        this._running = 0;\n        this._queue = [];\n        if (opts.concurrency)\n            this.concurrency = opts.concurrency;\n    }\n    runNext() {\n        const job = this._queue.shift();\n        if (!job)\n            return;\n        this._running++;\n        job\n            .func()\n            .then((result) => job.resolve(result))\n            .catch((error) => job.reject(error))\n            .finally(() => {\n            this._running--;\n            this.checkQueue();\n        });\n    }\n    checkQueue() {\n        if (this._running < this.concurrency)\n            this.runNext();\n    }\n    add(func) {\n        return new Promise((resolve, reject) => {\n            this._queue.push({ func, resolve, reject });\n            this.checkQueue();\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AACxC,OAAO,MAAMC,kBAAkB,GAAGD,IAAI,CAACE,MAAM,CAAC;EAC1C;EACA;EACAC,WAAW,EAAEH,IAAI,CAACI,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC;EACzCC,OAAO,EAAEN,IAAI,CAACI,QAAQ,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAAE;AAC3C,CAAC,EAAE;EACCE,oBAAoB,EAAE,KAAK;EAC3BC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,eAAe,MAAMC,KAAK,CAAC;EACvBC,WAAWA,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;IACnB,IAAI,CAACR,WAAW,GAAG,CAAC;IACpB,IAAI,CAACS,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAIF,IAAI,CAACR,WAAW,EAChB,IAAI,CAACA,WAAW,GAAGQ,IAAI,CAACR,WAAW;EAC3C;EACAW,OAAOA,CAAA,EAAG;IACN,MAAMC,GAAG,GAAG,IAAI,CAACF,MAAM,CAACG,KAAK,CAAC,CAAC;IAC/B,IAAI,CAACD,GAAG,EACJ;IACJ,IAAI,CAACH,QAAQ,EAAE;IACfG,GAAG,CACEE,IAAI,CAAC,CAAC,CACNC,IAAI,CAAEC,MAAM,IAAKJ,GAAG,CAACK,OAAO,CAACD,MAAM,CAAC,CAAC,CACrCE,KAAK,CAAEC,KAAK,IAAKP,GAAG,CAACQ,MAAM,CAACD,KAAK,CAAC,CAAC,CACnCE,OAAO,CAAC,MAAM;MACf,IAAI,CAACZ,QAAQ,EAAE;MACf,IAAI,CAACa,UAAU,CAAC,CAAC;IACrB,CAAC,CAAC;EACN;EACAA,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAACb,QAAQ,GAAG,IAAI,CAACT,WAAW,EAChC,IAAI,CAACW,OAAO,CAAC,CAAC;EACtB;EACAY,GAAGA,CAACT,IAAI,EAAE;IACN,OAAO,IAAIU,OAAO,CAAC,CAACP,OAAO,EAAEG,MAAM,KAAK;MACpC,IAAI,CAACV,MAAM,CAACe,IAAI,CAAC;QAAEX,IAAI;QAAEG,OAAO;QAAEG;MAAO,CAAC,CAAC;MAC3C,IAAI,CAACE,UAAU,CAAC,CAAC;IACrB,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}