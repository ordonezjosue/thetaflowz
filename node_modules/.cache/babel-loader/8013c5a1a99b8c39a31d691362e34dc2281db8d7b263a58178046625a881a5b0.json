{"ast":null,"code":"import { IndexFromPropertyKeys } from '../indexed/indexed.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\n/**\n * `[Utility]` Resolves an array of keys and schemas from the given schema. This method is faster\n * than obtaining the keys and resolving each individually via indexing. This method was written\n * accellerate Intersect and Union encoding.\n */\nexport function KeyOfPropertyEntries(schema) {\n  const keys = KeyOfPropertyKeys(schema);\n  const schemas = IndexFromPropertyKeys(schema, keys);\n  return keys.map((_, index) => [keys[index], schemas[index]]);\n}","map":{"version":3,"names":["IndexFromPropertyKeys","KeyOfPropertyKeys","KeyOfPropertyEntries","schema","keys","schemas","map","_","index"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs"],"sourcesContent":["import { IndexFromPropertyKeys } from '../indexed/indexed.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\n/**\n * `[Utility]` Resolves an array of keys and schemas from the given schema. This method is faster\n * than obtaining the keys and resolving each individually via indexing. This method was written\n * accellerate Intersect and Union encoding.\n */\nexport function KeyOfPropertyEntries(schema) {\n    const keys = KeyOfPropertyKeys(schema);\n    const schemas = IndexFromPropertyKeys(schema, keys);\n    return keys.map((_, index) => [keys[index], schemas[index]]);\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,MAAM,EAAE;EACzC,MAAMC,IAAI,GAAGH,iBAAiB,CAACE,MAAM,CAAC;EACtC,MAAME,OAAO,GAAGL,qBAAqB,CAACG,MAAM,EAAEC,IAAI,CAAC;EACnD,OAAOA,IAAI,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK,CAACJ,IAAI,CAACI,KAAK,CAAC,EAAEH,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;AAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}