{"ast":null,"code":"import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { UnionCreate } from './union-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsUnionOptional(T) {\n  return T.some(L => IsOptional(L));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(T) {\n  return T.map(L => IsOptional(L) ? RemoveOptionalFromType(L) : L);\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n  return Discard(T, [OptionalKind]);\n}\n// prettier-ignore\nfunction ResolveUnion(T, options) {\n  return IsUnionOptional(T) ? Optional(UnionCreate(RemoveOptionalFromRest(T), options)) : UnionCreate(RemoveOptionalFromRest(T), options);\n}\n/** `[Json]` Creates an evaluated Union type */\nexport function UnionEvaluated(T, options = {}) {\n  // prettier-ignore\n  return T.length === 0 ? Never(options) : T.length === 1 ? CloneType(T[0], options) : ResolveUnion(T, options);\n}","map":{"version":3,"names":["OptionalKind","CloneType","Discard","Never","Optional","UnionCreate","IsOptional","IsUnionOptional","T","some","L","RemoveOptionalFromRest","map","RemoveOptionalFromType","ResolveUnion","options","UnionEvaluated","length"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs"],"sourcesContent":["import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { UnionCreate } from './union-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsUnionOptional(T) {\n    return T.some(L => IsOptional(L));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(T) {\n    return T.map(L => IsOptional(L) ? RemoveOptionalFromType(L) : L);\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction ResolveUnion(T, options) {\n    return (IsUnionOptional(T)\n        ? Optional(UnionCreate(RemoveOptionalFromRest(T), options))\n        : UnionCreate(RemoveOptionalFromRest(T), options));\n}\n/** `[Json]` Creates an evaluated Union type */\nexport function UnionEvaluated(T, options = {}) {\n    // prettier-ignore\n    return (T.length === 0 ? Never(options) :\n        T.length === 1 ? CloneType(T[0], options) :\n            ResolveUnion(T, options));\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,sBAAsB;AACnD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,QAAQ,oBAAoB;AAChD;AACA;AACA;AACA,SAASC,UAAU,QAAQ,mBAAmB;AAC9C;AACA,SAASC,eAAeA,CAACC,CAAC,EAAE;EACxB,OAAOA,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAAC,CAAC;AACrC;AACA;AACA,SAASC,sBAAsBA,CAACH,CAAC,EAAE;EAC/B,OAAOA,CAAC,CAACI,GAAG,CAACF,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAAC,GAAGG,sBAAsB,CAACH,CAAC,CAAC,GAAGA,CAAC,CAAC;AACpE;AACA;AACA,SAASG,sBAAsBA,CAACL,CAAC,EAAE;EAC/B,OAAQN,OAAO,CAACM,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;AACtC;AACA;AACA,SAASc,YAAYA,CAACN,CAAC,EAAEO,OAAO,EAAE;EAC9B,OAAQR,eAAe,CAACC,CAAC,CAAC,GACpBJ,QAAQ,CAACC,WAAW,CAACM,sBAAsB,CAACH,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAC,GACzDV,WAAW,CAACM,sBAAsB,CAACH,CAAC,CAAC,EAAEO,OAAO,CAAC;AACzD;AACA;AACA,OAAO,SAASC,cAAcA,CAACR,CAAC,EAAEO,OAAO,GAAG,CAAC,CAAC,EAAE;EAC5C;EACA,OAAQP,CAAC,CAACS,MAAM,KAAK,CAAC,GAAGd,KAAK,CAACY,OAAO,CAAC,GACnCP,CAAC,CAACS,MAAM,KAAK,CAAC,GAAGhB,SAAS,CAACO,CAAC,CAAC,CAAC,CAAC,EAAEO,OAAO,CAAC,GACrCD,YAAY,CAACN,CAAC,EAAEO,OAAO,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}