{"ast":null,"code":"import { Kind } from '../symbols/index.mjs';\nimport { CloneType, CloneRest } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsObject, IsSchema } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// IntersectCreate\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IntersectCreate(T, options) {\n  const allObjects = T.every(schema => IsObject(schema));\n  const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties) ? {\n    unevaluatedProperties: CloneType(options.unevaluatedProperties)\n  } : {};\n  return options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects ? {\n    ...options,\n    ...clonedUnevaluatedProperties,\n    [Kind]: 'Intersect',\n    type: 'object',\n    allOf: CloneRest(T)\n  } : {\n    ...options,\n    ...clonedUnevaluatedProperties,\n    [Kind]: 'Intersect',\n    allOf: CloneRest(T)\n  };\n}","map":{"version":3,"names":["Kind","CloneType","CloneRest","IsObject","IsSchema","IntersectCreate","T","options","allObjects","every","schema","clonedUnevaluatedProperties","unevaluatedProperties","type","allOf"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs"],"sourcesContent":["import { Kind } from '../symbols/index.mjs';\nimport { CloneType, CloneRest } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsObject, IsSchema } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// IntersectCreate\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IntersectCreate(T, options) {\n    const allObjects = T.every((schema) => IsObject(schema));\n    const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties)\n        ? { unevaluatedProperties: CloneType(options.unevaluatedProperties) }\n        : {};\n    return ((options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects\n        ? { ...options, ...clonedUnevaluatedProperties, [Kind]: 'Intersect', type: 'object', allOf: CloneRest(T) }\n        : { ...options, ...clonedUnevaluatedProperties, [Kind]: 'Intersect', allOf: CloneRest(T) }));\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,SAAS,EAAEC,SAAS,QAAQ,mBAAmB;AACxD;AACA;AACA;AACA,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,mBAAmB;AACtD;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,CAAC,EAAEC,OAAO,EAAE;EACxC,MAAMC,UAAU,GAAGF,CAAC,CAACG,KAAK,CAAEC,MAAM,IAAKP,QAAQ,CAACO,MAAM,CAAC,CAAC;EACxD,MAAMC,2BAA2B,GAAGP,QAAQ,CAACG,OAAO,CAACK,qBAAqB,CAAC,GACrE;IAAEA,qBAAqB,EAAEX,SAAS,CAACM,OAAO,CAACK,qBAAqB;EAAE,CAAC,GACnE,CAAC,CAAC;EACR,OAASL,OAAO,CAACK,qBAAqB,KAAK,KAAK,IAAIR,QAAQ,CAACG,OAAO,CAACK,qBAAqB,CAAC,IAAIJ,UAAU,GACnG;IAAE,GAAGD,OAAO;IAAE,GAAGI,2BAA2B;IAAE,CAACX,IAAI,GAAG,WAAW;IAAEa,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAEZ,SAAS,CAACI,CAAC;EAAE,CAAC,GACxG;IAAE,GAAGC,OAAO;IAAE,GAAGI,2BAA2B;IAAE,CAACX,IAAI,GAAG,WAAW;IAAEc,KAAK,EAAEZ,SAAS,CAACI,CAAC;EAAE,CAAC;AAClG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}