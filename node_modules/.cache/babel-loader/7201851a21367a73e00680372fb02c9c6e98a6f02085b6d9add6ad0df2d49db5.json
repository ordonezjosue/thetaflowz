{"ast":null,"code":"/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n  return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an array */\nexport function IsArray(value) {\n  return Array.isArray(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n  return typeof value === 'bigint';\n}\n/** Returns true if this value is a boolean */\nexport function IsBoolean(value) {\n  return typeof value === 'boolean';\n}\n/** Returns true if this value is a Date object */\nexport function IsDate(value) {\n  return value instanceof globalThis.Date;\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n  return typeof value === 'function';\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n  return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;\n}\n/** Returns true if this value is null */\nexport function IsNull(value) {\n  return value === null;\n}\n/** Returns true if this value is number */\nexport function IsNumber(value) {\n  return typeof value === 'number';\n}\n/** Returns true if this value is an object */\nexport function IsObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n  return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n  return typeof value === 'string';\n}\n/** Returns true if this value is symbol */\nexport function IsSymbol(value) {\n  return typeof value === 'symbol';\n}\n/** Returns true if this value is a Uint8Array */\nexport function IsUint8Array(value) {\n  return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if this value is undefined */\nexport function IsUndefined(value) {\n  return value === undefined;\n}","map":{"version":3,"names":["IsAsyncIterator","value","IsObject","IsArray","IsUint8Array","Symbol","asyncIterator","Array","isArray","IsBigInt","IsBoolean","IsDate","globalThis","Date","IsFunction","IsIterator","iterator","IsNull","IsNumber","IsRegExp","RegExp","IsString","IsSymbol","Uint8Array","IsUndefined","undefined"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs"],"sourcesContent":["/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an array */\nexport function IsArray(value) {\n    return Array.isArray(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is a boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is a Date object */\nexport function IsDate(value) {\n    return value instanceof globalThis.Date;\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;\n}\n/** Returns true if this value is null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an object */\nexport function IsObject(value) {\n    return typeof value === 'object' && value !== null;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if this value is undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,eAAeA,CAACC,KAAK,EAAE;EACnC,OAAOC,QAAQ,CAACD,KAAK,CAAC,IAAI,CAACE,OAAO,CAACF,KAAK,CAAC,IAAI,CAACG,YAAY,CAACH,KAAK,CAAC,IAAII,MAAM,CAACC,aAAa,IAAIL,KAAK;AACtG;AACA;AACA,OAAO,SAASE,OAAOA,CAACF,KAAK,EAAE;EAC3B,OAAOM,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC;AAC/B;AACA;AACA,OAAO,SAASQ,QAAQA,CAACR,KAAK,EAAE;EAC5B,OAAO,OAAOA,KAAK,KAAK,QAAQ;AACpC;AACA;AACA,OAAO,SAASS,SAASA,CAACT,KAAK,EAAE;EAC7B,OAAO,OAAOA,KAAK,KAAK,SAAS;AACrC;AACA;AACA,OAAO,SAASU,MAAMA,CAACV,KAAK,EAAE;EAC1B,OAAOA,KAAK,YAAYW,UAAU,CAACC,IAAI;AAC3C;AACA;AACA,OAAO,SAASC,UAAUA,CAACb,KAAK,EAAE;EAC9B,OAAO,OAAOA,KAAK,KAAK,UAAU;AACtC;AACA;AACA,OAAO,SAASc,UAAUA,CAACd,KAAK,EAAE;EAC9B,OAAOC,QAAQ,CAACD,KAAK,CAAC,IAAI,CAACE,OAAO,CAACF,KAAK,CAAC,IAAI,CAACG,YAAY,CAACH,KAAK,CAAC,IAAII,MAAM,CAACW,QAAQ,IAAIf,KAAK;AACjG;AACA;AACA,OAAO,SAASgB,MAAMA,CAAChB,KAAK,EAAE;EAC1B,OAAOA,KAAK,KAAK,IAAI;AACzB;AACA;AACA,OAAO,SAASiB,QAAQA,CAACjB,KAAK,EAAE;EAC5B,OAAO,OAAOA,KAAK,KAAK,QAAQ;AACpC;AACA;AACA,OAAO,SAASC,QAAQA,CAACD,KAAK,EAAE;EAC5B,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI;AACtD;AACA;AACA,OAAO,SAASkB,QAAQA,CAAClB,KAAK,EAAE;EAC5B,OAAOA,KAAK,YAAYW,UAAU,CAACQ,MAAM;AAC7C;AACA;AACA,OAAO,SAASC,QAAQA,CAACpB,KAAK,EAAE;EAC5B,OAAO,OAAOA,KAAK,KAAK,QAAQ;AACpC;AACA;AACA,OAAO,SAASqB,QAAQA,CAACrB,KAAK,EAAE;EAC5B,OAAO,OAAOA,KAAK,KAAK,QAAQ;AACpC;AACA;AACA,OAAO,SAASG,YAAYA,CAACH,KAAK,EAAE;EAChC,OAAOA,KAAK,YAAYW,UAAU,CAACW,UAAU;AACjD;AACA;AACA,OAAO,SAASC,WAAWA,CAACvB,KAAK,EAAE;EAC/B,OAAOA,KAAK,KAAKwB,SAAS;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}