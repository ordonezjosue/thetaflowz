{"ast":null,"code":"import { TemplateLiteralSyntax } from './syntax.mjs';\nimport { TemplateLiteralPattern } from './pattern.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a TemplateLiteral type */\n// prettier-ignore\nexport function TemplateLiteral(unresolved, options = {}) {\n  const pattern = IsString(unresolved) ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved)) : TemplateLiteralPattern(unresolved);\n  return {\n    ...options,\n    [Kind]: 'TemplateLiteral',\n    type: 'string',\n    pattern\n  };\n}","map":{"version":3,"names":["TemplateLiteralSyntax","TemplateLiteralPattern","IsString","Kind","TemplateLiteral","unresolved","options","pattern","type"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs"],"sourcesContent":["import { TemplateLiteralSyntax } from './syntax.mjs';\nimport { TemplateLiteralPattern } from './pattern.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a TemplateLiteral type */\n// prettier-ignore\nexport function TemplateLiteral(unresolved, options = {}) {\n    const pattern = IsString(unresolved)\n        ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved))\n        : TemplateLiteralPattern(unresolved);\n    return { ...options, [Kind]: 'TemplateLiteral', type: 'string', pattern };\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,cAAc;AACpD,SAASC,sBAAsB,QAAQ,eAAe;AACtD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,IAAI,QAAQ,sBAAsB;AAC3C;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACtD,MAAMC,OAAO,GAAGL,QAAQ,CAACG,UAAU,CAAC,GAC9BJ,sBAAsB,CAACD,qBAAqB,CAACK,UAAU,CAAC,CAAC,GACzDJ,sBAAsB,CAACI,UAAU,CAAC;EACxC,OAAO;IAAE,GAAGC,OAAO;IAAE,CAACH,IAAI,GAAG,iBAAiB;IAAEK,IAAI,EAAE,QAAQ;IAAED;EAAQ,CAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}