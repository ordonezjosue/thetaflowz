{"ast":null,"code":"/*\nThe contents of this file are copied from:\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/date.ts\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/date-time.ts\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/time.ts\n*\n* License info:\n*\n* The MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst YEAR = /^(\\d\\d\\d\\d)$/;\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i;\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction IsLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nexport const isYear = value => {\n  const matches = YEAR.exec(value);\n  return !!matches;\n};\n/**\n * `[ajv-formats]` ISO8601 Date component\n * @example `2020-12-12`\n */\nexport const isDate = value => {\n  const matches = DATE.exec(value);\n  if (!matches) return false;\n  const year = +matches[1];\n  const month = +matches[2];\n  const day = +matches[3];\n  return month >= 1 && month <= 12 && day >= 1 && day <= (month === 2 && IsLeapYear(year) ? 29 : DAYS[month]);\n};\n/**\n * `[ajv-formats]` ISO8601 Time component\n * @example `20:20:39+00:00`\n */\nexport const isTime = (value, strictTimeZone) => {\n  const matches = TIME.exec(value);\n  if (!matches) return false;\n  const hr = +matches[1];\n  const min = +matches[2];\n  const sec = +matches[3];\n  const tz = matches[4];\n  const tzSign = matches[5] === \"-\" ? -1 : 1;\n  const tzH = +(matches[6] || 0);\n  const tzM = +(matches[7] || 0);\n  if (tzH > 23 || tzM > 59 || strictTimeZone && !tz) return false;\n  if (hr <= 23 && min <= 59 && sec < 60) return true;\n  const utcMin = min - tzM * tzSign;\n  const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);\n  return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61;\n};\n/**\n * `[ajv-formats]` ISO8601 DateTime\n * @example `2020-12-12T20:20:40+00:00`\n */\nexport const isDateTime = (value, strictTimeZone) => {\n  const dateTime = value.split(DATE_TIME_SEPARATOR);\n  return dateTime.length === 2 && isDate(dateTime[0]) && isTime(dateTime[1], strictTimeZone);\n};","map":{"version":3,"names":["DAYS","DATE","YEAR","TIME","DATE_TIME_SEPARATOR","IsLeapYear","year","isYear","value","matches","exec","isDate","month","day","isTime","strictTimeZone","hr","min","sec","tz","tzSign","tzH","tzM","utcMin","utcHr","isDateTime","dateTime","split","length"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/dist/esm/src/lib/datetime.js"],"sourcesContent":["/*\nThe contents of this file are copied from:\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/date.ts\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/date-time.ts\n* https://github.com/sinclairzx81/typebox/blob/7a42aeef5bb989c07bbfc9acdbd9d74b3febed05/example/formats/time.ts\n*\n* License info:\n*\n* The MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst YEAR = /^(\\d\\d\\d\\d)$/;\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i;\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction IsLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nexport const isYear = (value) => {\n    const matches = YEAR.exec(value);\n    return !!matches;\n};\n/**\n * `[ajv-formats]` ISO8601 Date component\n * @example `2020-12-12`\n */\nexport const isDate = (value) => {\n    const matches = DATE.exec(value);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month === 2 && IsLeapYear(year) ? 29 : DAYS[month]));\n};\n/**\n * `[ajv-formats]` ISO8601 Time component\n * @example `20:20:39+00:00`\n */\nexport const isTime = (value, strictTimeZone) => {\n    const matches = TIME.exec(value);\n    if (!matches)\n        return false;\n    const hr = +matches[1];\n    const min = +matches[2];\n    const sec = +matches[3];\n    const tz = matches[4];\n    const tzSign = matches[5] === \"-\" ? -1 : 1;\n    const tzH = +(matches[6] || 0);\n    const tzM = +(matches[7] || 0);\n    if (tzH > 23 || tzM > 59 || (strictTimeZone && !tz))\n        return false;\n    if (hr <= 23 && min <= 59 && sec < 60)\n        return true;\n    const utcMin = min - tzM * tzSign;\n    const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);\n    return ((utcHr === 23 || utcHr === -1) &&\n        (utcMin === 59 || utcMin === -1) &&\n        sec < 61);\n};\n/**\n * `[ajv-formats]` ISO8601 DateTime\n * @example `2020-12-12T20:20:40+00:00`\n */\nexport const isDateTime = (value, strictTimeZone) => {\n    const dateTime = value.split(DATE_TIME_SEPARATOR);\n    return (dateTime.length === 2 &&\n        isDate(dateTime[0]) &&\n        isTime(dateTime[1], strictTimeZone));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}