{"ast":null,"code":"import { Never } from '../never/index.mjs';\nimport { IntersectEvaluated } from '../intersect/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { IndexFromMappedKey } from './indexed-from-mapped-key.mjs';\nimport { IndexFromMappedResult } from './indexed-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsIntersect, IsObject, IsMappedKey, IsMappedResult, IsNever, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T, K) {\n  return T.map(L => IndexFromPropertyKey(L, K));\n}\n// prettier-ignore\nfunction FromIntersectRest(T) {\n  return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction FromIntersect(T, K) {\n  return IntersectEvaluated(FromIntersectRest(FromRest(T, K)));\n}\n// prettier-ignore\nfunction FromUnionRest(T) {\n  return T.some(L => IsNever(L)) ? [] : T;\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n  return UnionEvaluated(FromUnionRest(FromRest(T, K)));\n}\n// prettier-ignore\nfunction FromTuple(T, K) {\n  return K in T ? T[K] : K === '[number]' ? UnionEvaluated(T) : Never();\n}\n// prettier-ignore\nfunction FromArray(T, K) {\n  return K === '[number]' ? T : Never();\n}\n// prettier-ignore\nfunction FromProperty(T, K) {\n  return K in T ? T[K] : Never();\n}\n// prettier-ignore\nexport function IndexFromPropertyKey(T, K) {\n  return IsIntersect(T) ? FromIntersect(T.allOf, K) : IsUnion(T) ? FromUnion(T.anyOf, K) : IsTuple(T) ? FromTuple(T.items ?? [], K) : IsArray(T) ? FromArray(T.items, K) : IsObject(T) ? FromProperty(T.properties, K) : Never();\n}\n// prettier-ignore\nexport function IndexFromPropertyKeys(T, K) {\n  return K.map(L => IndexFromPropertyKey(T, L));\n}\n// prettier-ignore\nfunction FromSchema(T, K) {\n  return UnionEvaluated(IndexFromPropertyKeys(T, K));\n}\n/** `[Json]` Returns an Indexed property type for the given keys */\nexport function Index(T, K, options = {}) {\n  // prettier-ignore\n  return IsMappedResult(K) ? CloneType(IndexFromMappedResult(T, K, options)) : IsMappedKey(K) ? CloneType(IndexFromMappedKey(T, K, options)) : IsSchema(K) ? CloneType(FromSchema(T, IndexPropertyKeys(K)), options) : CloneType(FromSchema(T, K), options);\n}","map":{"version":3,"names":["Never","IntersectEvaluated","UnionEvaluated","CloneType","IndexPropertyKeys","IndexFromMappedKey","IndexFromMappedResult","IsArray","IsIntersect","IsObject","IsMappedKey","IsMappedResult","IsNever","IsSchema","IsTuple","IsUnion","FromRest","T","K","map","L","IndexFromPropertyKey","FromIntersectRest","filter","FromIntersect","FromUnionRest","some","FromUnion","FromTuple","FromArray","FromProperty","allOf","anyOf","items","properties","IndexFromPropertyKeys","FromSchema","Index","options"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs"],"sourcesContent":["import { Never } from '../never/index.mjs';\nimport { IntersectEvaluated } from '../intersect/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { IndexFromMappedKey } from './indexed-from-mapped-key.mjs';\nimport { IndexFromMappedResult } from './indexed-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsIntersect, IsObject, IsMappedKey, IsMappedResult, IsNever, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T, K) {\n    return T.map(L => IndexFromPropertyKey(L, K));\n}\n// prettier-ignore\nfunction FromIntersectRest(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction FromIntersect(T, K) {\n    return (IntersectEvaluated(FromIntersectRest(FromRest(T, K))));\n}\n// prettier-ignore\nfunction FromUnionRest(T) {\n    return (T.some(L => IsNever(L))\n        ? []\n        : T);\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return (UnionEvaluated(FromUnionRest(FromRest(T, K))));\n}\n// prettier-ignore\nfunction FromTuple(T, K) {\n    return (K in T ? T[K] :\n        K === '[number]' ? UnionEvaluated(T) :\n            Never());\n}\n// prettier-ignore\nfunction FromArray(T, K) {\n    return (K === '[number]'\n        ? T\n        : Never());\n}\n// prettier-ignore\nfunction FromProperty(T, K) {\n    return (K in T ? T[K] : Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKey(T, K) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf, K) :\n        IsUnion(T) ? FromUnion(T.anyOf, K) :\n            IsTuple(T) ? FromTuple(T.items ?? [], K) :\n                IsArray(T) ? FromArray(T.items, K) :\n                    IsObject(T) ? FromProperty(T.properties, K) :\n                        Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKeys(T, K) {\n    return K.map(L => IndexFromPropertyKey(T, L));\n}\n// prettier-ignore\nfunction FromSchema(T, K) {\n    return (UnionEvaluated(IndexFromPropertyKeys(T, K)));\n}\n/** `[Json]` Returns an Indexed property type for the given keys */\nexport function Index(T, K, options = {}) {\n    // prettier-ignore\n    return (IsMappedResult(K) ? CloneType(IndexFromMappedResult(T, K, options)) :\n        IsMappedKey(K) ? CloneType(IndexFromMappedKey(T, K, options)) :\n            IsSchema(K) ? CloneType(FromSchema(T, IndexPropertyKeys(K)), options) :\n                CloneType(FromSchema(T, K), options));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}