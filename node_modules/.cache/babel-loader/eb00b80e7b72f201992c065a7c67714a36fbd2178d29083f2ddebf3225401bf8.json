{"ast":null,"code":"import { ExtendedCookieJar } from \"./cookieJar.js\";\nimport { Type } from \"@sinclair/typebox\";\nimport { QueueOptionsSchema } from \"./queue.js\";\nconst LoggerSchema = Type.Object({\n  info: Type.Function([], Type.Void()),\n  warn: Type.Function([], Type.Void()),\n  error: Type.Function([], Type.Void()),\n  debug: Type.Function([], Type.Void())\n});\nconst ValidationOptionsSchema = Type.Object({\n  logErrors: Type.Optional(Type.Boolean()),\n  logOptionsErrors: Type.Optional(Type.Boolean()),\n  _internalThrowOnAdditionalProperties: Type.Optional(Type.Boolean({\n    default: process.env.NODE_ENV === \"test\",\n    description: \"Use this property to throw when properties beyond what is explicitly specified in the schema are provided. It is an internal option and subject to change, use at your own risk\"\n  }))\n});\nexport const YahooFinanceOptionsSchema = Type.Object({\n  YF_QUERY_HOST: Type.Optional(Type.String()),\n  cookieJar: Type.Optional(Type.Any()),\n  queue: Type.Optional(QueueOptionsSchema),\n  validation: Type.Optional(ValidationOptionsSchema),\n  logger: Type.Optional(LoggerSchema)\n}, {\n  title: \"YahooFinanceOptions\"\n});\nconst options = {\n  YF_QUERY_HOST: process.env.YF_QUERY_HOST || \"query2.finance.yahoo.com\",\n  cookieJar: new ExtendedCookieJar(),\n  queue: {\n    concurrency: 4,\n    // Min: 1, Max: Infinity\n    timeout: 60\n  },\n  validation: {\n    logErrors: true,\n    logOptionsErrors: true\n  },\n  logger: {\n    info: (...args) => console.log(...args),\n    warn: (...args) => console.warn(...args),\n    error: (...args) => console.error(...args),\n    debug: (...args) => console.log(...args)\n  }\n};\nexport default options;","map":{"version":3,"names":["ExtendedCookieJar","Type","QueueOptionsSchema","LoggerSchema","Object","info","Function","Void","warn","error","debug","ValidationOptionsSchema","logErrors","Optional","Boolean","logOptionsErrors","_internalThrowOnAdditionalProperties","default","process","env","NODE_ENV","description","YahooFinanceOptionsSchema","YF_QUERY_HOST","String","cookieJar","Any","queue","validation","logger","title","options","concurrency","timeout","args","console","log"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/dist/esm/src/lib/options.js"],"sourcesContent":["import { ExtendedCookieJar } from \"./cookieJar.js\";\nimport { Type } from \"@sinclair/typebox\";\nimport { QueueOptionsSchema } from \"./queue.js\";\nconst LoggerSchema = Type.Object({\n    info: Type.Function([], Type.Void()),\n    warn: Type.Function([], Type.Void()),\n    error: Type.Function([], Type.Void()),\n    debug: Type.Function([], Type.Void()),\n});\nconst ValidationOptionsSchema = Type.Object({\n    logErrors: Type.Optional(Type.Boolean()),\n    logOptionsErrors: Type.Optional(Type.Boolean()),\n    _internalThrowOnAdditionalProperties: Type.Optional(Type.Boolean({\n        default: process.env.NODE_ENV === \"test\",\n        description: \"Use this property to throw when properties beyond what is explicitly specified in the schema are provided. It is an internal option and subject to change, use at your own risk\",\n    })),\n});\nexport const YahooFinanceOptionsSchema = Type.Object({\n    YF_QUERY_HOST: Type.Optional(Type.String()),\n    cookieJar: Type.Optional(Type.Any()),\n    queue: Type.Optional(QueueOptionsSchema),\n    validation: Type.Optional(ValidationOptionsSchema),\n    logger: Type.Optional(LoggerSchema),\n}, { title: \"YahooFinanceOptions\" });\nconst options = {\n    YF_QUERY_HOST: process.env.YF_QUERY_HOST || \"query2.finance.yahoo.com\",\n    cookieJar: new ExtendedCookieJar(),\n    queue: {\n        concurrency: 4, // Min: 1, Max: Infinity\n        timeout: 60,\n    },\n    validation: {\n        logErrors: true,\n        logOptionsErrors: true,\n    },\n    logger: {\n        info: (...args) => console.log(...args),\n        warn: (...args) => console.warn(...args),\n        error: (...args) => console.error(...args),\n        debug: (...args) => console.log(...args),\n    },\n};\nexport default options;\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,kBAAkB,QAAQ,YAAY;AAC/C,MAAMC,YAAY,GAAGF,IAAI,CAACG,MAAM,CAAC;EAC7BC,IAAI,EAAEJ,IAAI,CAACK,QAAQ,CAAC,EAAE,EAAEL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;EACpCC,IAAI,EAAEP,IAAI,CAACK,QAAQ,CAAC,EAAE,EAAEL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;EACpCE,KAAK,EAAER,IAAI,CAACK,QAAQ,CAAC,EAAE,EAAEL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;EACrCG,KAAK,EAAET,IAAI,CAACK,QAAQ,CAAC,EAAE,EAAEL,IAAI,CAACM,IAAI,CAAC,CAAC;AACxC,CAAC,CAAC;AACF,MAAMI,uBAAuB,GAAGV,IAAI,CAACG,MAAM,CAAC;EACxCQ,SAAS,EAAEX,IAAI,CAACY,QAAQ,CAACZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;EACxCC,gBAAgB,EAAEd,IAAI,CAACY,QAAQ,CAACZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;EAC/CE,oCAAoC,EAAEf,IAAI,CAACY,QAAQ,CAACZ,IAAI,CAACa,OAAO,CAAC;IAC7DG,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM;IACxCC,WAAW,EAAE;EACjB,CAAC,CAAC;AACN,CAAC,CAAC;AACF,OAAO,MAAMC,yBAAyB,GAAGrB,IAAI,CAACG,MAAM,CAAC;EACjDmB,aAAa,EAAEtB,IAAI,CAACY,QAAQ,CAACZ,IAAI,CAACuB,MAAM,CAAC,CAAC,CAAC;EAC3CC,SAAS,EAAExB,IAAI,CAACY,QAAQ,CAACZ,IAAI,CAACyB,GAAG,CAAC,CAAC,CAAC;EACpCC,KAAK,EAAE1B,IAAI,CAACY,QAAQ,CAACX,kBAAkB,CAAC;EACxC0B,UAAU,EAAE3B,IAAI,CAACY,QAAQ,CAACF,uBAAuB,CAAC;EAClDkB,MAAM,EAAE5B,IAAI,CAACY,QAAQ,CAACV,YAAY;AACtC,CAAC,EAAE;EAAE2B,KAAK,EAAE;AAAsB,CAAC,CAAC;AACpC,MAAMC,OAAO,GAAG;EACZR,aAAa,EAAEL,OAAO,CAACC,GAAG,CAACI,aAAa,IAAI,0BAA0B;EACtEE,SAAS,EAAE,IAAIzB,iBAAiB,CAAC,CAAC;EAClC2B,KAAK,EAAE;IACHK,WAAW,EAAE,CAAC;IAAE;IAChBC,OAAO,EAAE;EACb,CAAC;EACDL,UAAU,EAAE;IACRhB,SAAS,EAAE,IAAI;IACfG,gBAAgB,EAAE;EACtB,CAAC;EACDc,MAAM,EAAE;IACJxB,IAAI,EAAEA,CAAC,GAAG6B,IAAI,KAAKC,OAAO,CAACC,GAAG,CAAC,GAAGF,IAAI,CAAC;IACvC1B,IAAI,EAAEA,CAAC,GAAG0B,IAAI,KAAKC,OAAO,CAAC3B,IAAI,CAAC,GAAG0B,IAAI,CAAC;IACxCzB,KAAK,EAAEA,CAAC,GAAGyB,IAAI,KAAKC,OAAO,CAAC1B,KAAK,CAAC,GAAGyB,IAAI,CAAC;IAC1CxB,KAAK,EAAEA,CAAC,GAAGwB,IAAI,KAAKC,OAAO,CAACC,GAAG,CAAC,GAAGF,IAAI;EAC3C;AACJ,CAAC;AACD,eAAeH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}