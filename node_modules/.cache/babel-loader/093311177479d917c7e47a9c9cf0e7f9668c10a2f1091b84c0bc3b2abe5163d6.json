{"ast":null,"code":"import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { PickFromMappedKey } from './pick-from-mapped-key.mjs';\nimport { PickFromMappedResult } from './pick-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult, IsIntersect, IsUnion, IsObject, IsSchema } from '../guard/kind.mjs';\nfunction FromIntersect(T, K) {\n  return T.map(T => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n  return T.map(T => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n  const Acc = {};\n  for (const K2 of K) if (K2 in T) Acc[K2] = T[K2];\n  return Acc;\n}\n// ------------------------------------------------------------------\n// PickResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PickResolve(T, K) {\n  return IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) : IsUnion(T) ? Union(FromUnion(T.anyOf, K)) : IsObject(T) ? Object(FromProperties(T.properties, K)) : Object({});\n}\nexport function Pick(T, K, options = {}) {\n  // mapped\n  if (IsMappedKey(K)) return PickFromMappedKey(T, K, options);\n  if (IsMappedResult(T)) return PickFromMappedResult(T, K, options);\n  // non-mapped\n  const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n  const D = Discard(T, [TransformKind, '$id', 'required']);\n  const R = CloneType(PickResolve(T, I), options);\n  return {\n    ...D,\n    ...R\n  };\n}","map":{"version":3,"names":["Intersect","Union","Object","IndexPropertyKeys","Discard","TransformKind","CloneType","PickFromMappedKey","PickFromMappedResult","IsMappedKey","IsMappedResult","IsIntersect","IsUnion","IsObject","IsSchema","FromIntersect","T","K","map","PickResolve","FromUnion","FromProperties","Acc","K2","allOf","anyOf","properties","Pick","options","I","D","R"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs"],"sourcesContent":["import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { PickFromMappedKey } from './pick-from-mapped-key.mjs';\nimport { PickFromMappedResult } from './pick-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult, IsIntersect, IsUnion, IsObject, IsSchema } from '../guard/kind.mjs';\nfunction FromIntersect(T, K) {\n    return T.map((T) => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return T.map((T) => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n    const Acc = {};\n    for (const K2 of K)\n        if (K2 in T)\n            Acc[K2] = T[K2];\n    return Acc;\n}\n// ------------------------------------------------------------------\n// PickResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PickResolve(T, K) {\n    return (IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) :\n        IsUnion(T) ? Union(FromUnion(T.anyOf, K)) :\n            IsObject(T) ? Object(FromProperties(T.properties, K)) :\n                Object({}));\n}\nexport function Pick(T, K, options = {}) {\n    // mapped\n    if (IsMappedKey(K))\n        return PickFromMappedKey(T, K, options);\n    if (IsMappedResult(T))\n        return PickFromMappedResult(T, K, options);\n    // non-mapped\n    const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(PickResolve(T, I), options);\n    return { ...D, ...R };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAClD,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE;AACA;AACA;AACA,SAASC,WAAW,EAAEC,cAAc,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,mBAAmB;AACzG,SAASC,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOD,CAAC,CAACE,GAAG,CAAEF,CAAC,IAAKG,WAAW,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC;AAC1C;AACA;AACA,SAASG,SAASA,CAACJ,CAAC,EAAEC,CAAC,EAAE;EACrB,OAAOD,CAAC,CAACE,GAAG,CAAEF,CAAC,IAAKG,WAAW,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC;AAC1C;AACA;AACA,SAASI,cAAcA,CAACL,CAAC,EAAEC,CAAC,EAAE;EAC1B,MAAMK,GAAG,GAAG,CAAC,CAAC;EACd,KAAK,MAAMC,EAAE,IAAIN,CAAC,EACd,IAAIM,EAAE,IAAIP,CAAC,EACPM,GAAG,CAACC,EAAE,CAAC,GAAGP,CAAC,CAACO,EAAE,CAAC;EACvB,OAAOD,GAAG;AACd;AACA;AACA;AACA;AACA;AACA,SAASH,WAAWA,CAACH,CAAC,EAAEC,CAAC,EAAE;EACvB,OAAQN,WAAW,CAACK,CAAC,CAAC,GAAGhB,SAAS,CAACe,aAAa,CAACC,CAAC,CAACQ,KAAK,EAAEP,CAAC,CAAC,CAAC,GACzDL,OAAO,CAACI,CAAC,CAAC,GAAGf,KAAK,CAACmB,SAAS,CAACJ,CAAC,CAACS,KAAK,EAAER,CAAC,CAAC,CAAC,GACrCJ,QAAQ,CAACG,CAAC,CAAC,GAAGd,MAAM,CAACmB,cAAc,CAACL,CAAC,CAACU,UAAU,EAAET,CAAC,CAAC,CAAC,GACjDf,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,OAAO,SAASyB,IAAIA,CAACX,CAAC,EAAEC,CAAC,EAAEW,OAAO,GAAG,CAAC,CAAC,EAAE;EACrC;EACA,IAAInB,WAAW,CAACQ,CAAC,CAAC,EACd,OAAOV,iBAAiB,CAACS,CAAC,EAAEC,CAAC,EAAEW,OAAO,CAAC;EAC3C,IAAIlB,cAAc,CAACM,CAAC,CAAC,EACjB,OAAOR,oBAAoB,CAACQ,CAAC,EAAEC,CAAC,EAAEW,OAAO,CAAC;EAC9C;EACA,MAAMC,CAAC,GAAGf,QAAQ,CAACG,CAAC,CAAC,GAAGd,iBAAiB,CAACc,CAAC,CAAC,GAAGA,CAAC;EAChD,MAAMa,CAAC,GAAG1B,OAAO,CAACY,CAAC,EAAE,CAACX,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;EACxD,MAAM0B,CAAC,GAAGzB,SAAS,CAACa,WAAW,CAACH,CAAC,EAAEa,CAAC,CAAC,EAAED,OAAO,CAAC;EAC/C,OAAO;IAAE,GAAGE,CAAC;IAAE,GAAGC;EAAE,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}