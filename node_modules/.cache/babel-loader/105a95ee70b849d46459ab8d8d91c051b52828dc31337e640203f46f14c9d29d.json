{"ast":null,"code":"import { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TransformBuilders\n// ------------------------------------------------------------------\nexport class TransformDecodeBuilder {\n  constructor(schema) {\n    this.schema = schema;\n  }\n  Decode(decode) {\n    return new TransformEncodeBuilder(this.schema, decode);\n  }\n}\n// prettier-ignore\nexport class TransformEncodeBuilder {\n  constructor(schema, decode) {\n    this.schema = schema;\n    this.decode = decode;\n  }\n  EncodeTransform(encode, schema) {\n    const Encode = value => schema[TransformKind].Encode(encode(value));\n    const Decode = value => this.decode(schema[TransformKind].Decode(value));\n    const Codec = {\n      Encode: Encode,\n      Decode: Decode\n    };\n    return {\n      ...schema,\n      [TransformKind]: Codec\n    };\n  }\n  EncodeSchema(encode, schema) {\n    const Codec = {\n      Decode: this.decode,\n      Encode: encode\n    };\n    return {\n      ...schema,\n      [TransformKind]: Codec\n    };\n  }\n  Encode(encode) {\n    const schema = CloneType(this.schema);\n    return IsTransform(schema) ? this.EncodeTransform(encode, schema) : this.EncodeSchema(encode, schema);\n  }\n}\n/** `[Json]` Creates a Transform type */\nexport function Transform(schema) {\n  return new TransformDecodeBuilder(schema);\n}","map":{"version":3,"names":["TransformKind","CloneType","IsTransform","TransformDecodeBuilder","constructor","schema","Decode","decode","TransformEncodeBuilder","EncodeTransform","encode","Encode","value","Codec","EncodeSchema","Transform"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs"],"sourcesContent":["import { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TransformBuilders\n// ------------------------------------------------------------------\nexport class TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\n// prettier-ignore\nexport class TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    EncodeTransform(encode, schema) {\n        const Encode = (value) => schema[TransformKind].Encode(encode(value));\n        const Decode = (value) => this.decode(schema[TransformKind].Decode(value));\n        const Codec = { Encode: Encode, Decode: Decode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    EncodeSchema(encode, schema) {\n        const Codec = { Decode: this.decode, Encode: encode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    Encode(encode) {\n        const schema = CloneType(this.schema);\n        return (IsTransform(schema) ? this.EncodeTransform(encode, schema) : this.EncodeSchema(encode, schema));\n    }\n}\n/** `[Json]` Creates a Transform type */\nexport function Transform(schema) {\n    return new TransformDecodeBuilder(schema);\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C;AACA;AACA;AACA,SAASC,WAAW,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,CAAC;EAChCC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACAC,MAAMA,CAACC,MAAM,EAAE;IACX,OAAO,IAAIC,sBAAsB,CAAC,IAAI,CAACH,MAAM,EAAEE,MAAM,CAAC;EAC1D;AACJ;AACA;AACA,OAAO,MAAMC,sBAAsB,CAAC;EAChCJ,WAAWA,CAACC,MAAM,EAAEE,MAAM,EAAE;IACxB,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,MAAM,GAAGA,MAAM;EACxB;EACAE,eAAeA,CAACC,MAAM,EAAEL,MAAM,EAAE;IAC5B,MAAMM,MAAM,GAAIC,KAAK,IAAKP,MAAM,CAACL,aAAa,CAAC,CAACW,MAAM,CAACD,MAAM,CAACE,KAAK,CAAC,CAAC;IACrE,MAAMN,MAAM,GAAIM,KAAK,IAAK,IAAI,CAACL,MAAM,CAACF,MAAM,CAACL,aAAa,CAAC,CAACM,MAAM,CAACM,KAAK,CAAC,CAAC;IAC1E,MAAMC,KAAK,GAAG;MAAEF,MAAM,EAAEA,MAAM;MAAEL,MAAM,EAAEA;IAAO,CAAC;IAChD,OAAO;MAAE,GAAGD,MAAM;MAAE,CAACL,aAAa,GAAGa;IAAM,CAAC;EAChD;EACAC,YAAYA,CAACJ,MAAM,EAAEL,MAAM,EAAE;IACzB,MAAMQ,KAAK,GAAG;MAAEP,MAAM,EAAE,IAAI,CAACC,MAAM;MAAEI,MAAM,EAAED;IAAO,CAAC;IACrD,OAAO;MAAE,GAAGL,MAAM;MAAE,CAACL,aAAa,GAAGa;IAAM,CAAC;EAChD;EACAF,MAAMA,CAACD,MAAM,EAAE;IACX,MAAML,MAAM,GAAGJ,SAAS,CAAC,IAAI,CAACI,MAAM,CAAC;IACrC,OAAQH,WAAW,CAACG,MAAM,CAAC,GAAG,IAAI,CAACI,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC,GAAG,IAAI,CAACS,YAAY,CAACJ,MAAM,EAAEL,MAAM,CAAC;EAC1G;AACJ;AACA;AACA,OAAO,SAASU,SAASA,CAACV,MAAM,EAAE;EAC9B,OAAO,IAAIF,sBAAsB,CAACE,MAAM,CAAC;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}