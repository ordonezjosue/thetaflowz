{"ast":null,"code":"import { Type } from \"@sinclair/typebox\";\nimport { YahooDateInMs, YahooFinanceDate, YahooNumber, YahooTwoNumberRange } from \"../lib/yahooFinanceTypes.js\";\nexport const QuoteBase = Type.Object({\n  language: Type.String(),\n  // \"en-US\",\n  region: Type.String(),\n  // \"US\",\n  quoteType: Type.String(),\n  // \"EQUITY\" | \"ETF\" | \"MUTUALFUND\";\n  typeDisp: Type.Optional(Type.String()),\n  // \"Equity\", not always present.\n  quoteSourceName: Type.Optional(Type.String()),\n  // \"Delayed Quote\",\n  triggerable: Type.Boolean(),\n  // true,\n  currency: Type.Optional(Type.String()),\n  // \"USD\",\n  // Seems to appear / disappear based not on symbol but network load (#445)\n  customPriceAlertConfidence: Type.Optional(Type.String()),\n  // \"HIGH\" | \"LOW\"; TODO: anything else?\n  marketState: Type.Union([Type.Literal(\"REGULAR\"), Type.Literal(\"CLOSED\"), Type.Literal(\"PRE\"), Type.Literal(\"PREPRE\"), Type.Literal(\"POST\"), Type.Literal(\"POSTPOST\")]),\n  tradeable: Type.Boolean(),\n  // false,\n  cryptoTradeable: Type.Optional(Type.Boolean()),\n  // false\n  exchange: Type.String(),\n  // \"NMS\",\n  shortName: Type.Optional(Type.String()),\n  // \"NVIDIA Corporation\",\n  longName: Type.Optional(Type.String()),\n  // \"NVIDIA Corporation\",\n  messageBoardId: Type.Optional(Type.String()),\n  // \"finmb_32307\",\n  exchangeTimezoneName: Type.String(),\n  // \"America/New_York\",\n  exchangeTimezoneShortName: Type.String(),\n  // \"EST\",\n  gmtOffSetMilliseconds: YahooNumber,\n  // -18000000,\n  market: Type.String(),\n  // \"us_market\",\n  esgPopulated: Type.Boolean(),\n  // false,\n  fiftyTwoWeekLowChange: Type.Optional(YahooNumber),\n  // 362.96002,\n  fiftyTwoWeekLowChangePercent: Type.Optional(YahooNumber),\n  // 2.0088556,\n  fiftyTwoWeekRange: Type.Optional(YahooTwoNumberRange),\n  // \"180.68 - 589.07\" -> { low, high }\n  fiftyTwoWeekHighChange: Type.Optional(YahooNumber),\n  // -45.429993,\n  fiftyTwoWeekHighChangePercent: Type.Optional(YahooNumber),\n  // -0.07712155,\n  fiftyTwoWeekLow: Type.Optional(YahooNumber),\n  // 180.68,\n  fiftyTwoWeekHigh: Type.Optional(YahooNumber),\n  // 589.07,\n  fiftyTwoWeekChangePercent: Type.Optional(YahooNumber),\n  // 22.604025\n  dividendDate: Type.Optional(YahooFinanceDate),\n  // 1609200000,\n  // maybe always present on EQUITY?\n  earningsTimestamp: Type.Optional(YahooFinanceDate),\n  // 1614200400,\n  earningsTimestampStart: Type.Optional(YahooFinanceDate),\n  // 1614200400,\n  earningsTimestampEnd: Type.Optional(YahooFinanceDate),\n  // 1614200400,\n  trailingAnnualDividendRate: Type.Optional(YahooNumber),\n  // 0.64,\n  trailingPE: Type.Optional(YahooNumber),\n  // 88.873634,\n  trailingAnnualDividendYield: Type.Optional(YahooNumber),\n  // 0.0011709387,\n  epsTrailingTwelveMonths: Type.Optional(YahooNumber),\n  // 6.117,\n  epsForward: Type.Optional(YahooNumber),\n  // 11.68,\n  epsCurrentYear: Type.Optional(YahooNumber),\n  // 9.72,\n  priceEpsCurrentYear: Type.Optional(YahooNumber),\n  // 55.930042,\n  sharesOutstanding: Type.Optional(YahooNumber),\n  // 619000000,\n  bookValue: Type.Optional(YahooNumber),\n  // 24.772,\n  fiftyDayAverage: Type.Optional(YahooNumber),\n  // 530.8828,\n  fiftyDayAverageChange: Type.Optional(YahooNumber),\n  // 12.757202,\n  fiftyDayAverageChangePercent: Type.Optional(YahooNumber),\n  // 0.024030166,\n  twoHundredDayAverage: Type.Optional(YahooNumber),\n  // 515.8518,\n  twoHundredDayAverageChange: Type.Optional(YahooNumber),\n  // 27.788208,\n  twoHundredDayAverageChangePercent: Type.Optional(YahooNumber),\n  // 0.053868588,\n  marketCap: Type.Optional(YahooNumber),\n  // 336513171456,\n  forwardPE: Type.Optional(YahooNumber),\n  // 46.54452,\n  priceToBook: Type.Optional(YahooNumber),\n  // 21.945745,\n  sourceInterval: YahooNumber,\n  // 15,\n  exchangeDataDelayedBy: YahooNumber,\n  // 0,\n  firstTradeDateMilliseconds: Type.Optional(YahooDateInMs),\n  // 917015400000 -> Date\n  priceHint: YahooNumber,\n  // 2,\n  postMarketChangePercent: Type.Optional(YahooNumber),\n  // 0.093813874,\n  postMarketTime: Type.Optional(YahooFinanceDate),\n  // 1612573179 -> new Date()\n  postMarketPrice: Type.Optional(YahooNumber),\n  // 544.15,\n  postMarketChange: Type.Optional(YahooNumber),\n  // 0.51000977,\n  regularMarketChange: Type.Optional(YahooNumber),\n  // -2.9299927,\n  regularMarketChangePercent: Type.Optional(YahooNumber),\n  // -0.53606904,\n  regularMarketTime: Type.Optional(YahooFinanceDate),\n  // 1612558802 -> new Date()\n  regularMarketPrice: Type.Optional(YahooNumber),\n  // 543.64,\n  regularMarketDayHigh: Type.Optional(YahooNumber),\n  // 549.19,\n  regularMarketDayRange: Type.Optional(YahooTwoNumberRange),\n  // \"541.867 - 549.19\" -> { low, high }\n  regularMarketDayLow: Type.Optional(YahooNumber),\n  // 541.867,\n  regularMarketVolume: Type.Optional(YahooNumber),\n  // 4228841,\n  regularMarketPreviousClose: Type.Optional(YahooNumber),\n  // 546.57,\n  preMarketChange: Type.Optional(YahooNumber),\n  // -2.9299927,\n  preMarketChangePercent: Type.Optional(YahooNumber),\n  // -0.53606904,\n  preMarketTime: Type.Optional(YahooFinanceDate),\n  // 1612558802 -> new Date()\n  preMarketPrice: Type.Optional(YahooNumber),\n  // 543.64,\n  bid: Type.Optional(YahooNumber),\n  // 543.84,\n  ask: Type.Optional(YahooNumber),\n  // 544.15,\n  bidSize: Type.Optional(YahooNumber),\n  // 18,\n  askSize: Type.Optional(YahooNumber),\n  // 8,\n  fullExchangeName: Type.String(),\n  // \"NasdaqGS\",\n  financialCurrency: Type.Optional(Type.String()),\n  // \"USD\",\n  regularMarketOpen: Type.Optional(YahooNumber),\n  // 549.0,\n  averageDailyVolume3Month: Type.Optional(YahooNumber),\n  // 7475022,\n  averageDailyVolume10Day: Type.Optional(YahooNumber),\n  // 5546385,\n  displayName: Type.Optional(Type.String()),\n  // \"NVIDIA\",\n  symbol: Type.String(),\n  // \"NVDA\"\n  underlyingSymbol: Type.Optional(Type.String()),\n  // \"LD.MI\" (for LDO.MI, #363)\n  // only on ETF?  not on EQUITY?\n  ytdReturn: Type.Optional(YahooNumber),\n  // 0.31\n  trailingThreeMonthReturns: Type.Optional(YahooNumber),\n  // 16.98\n  trailingThreeMonthNavReturns: Type.Optional(YahooNumber),\n  // 17.08\n  ipoExpectedDate: Type.Optional(YahooFinanceDate),\n  // \"2020-08-13\",\n  newListingDate: Type.Optional(YahooFinanceDate),\n  // \"2021-02-16\",\n  nameChangeDate: Type.Optional(YahooFinanceDate),\n  prevName: Type.Optional(Type.String()),\n  averageAnalystRating: Type.Optional(Type.String()),\n  pageViewGrowthWeekly: Type.Optional(YahooNumber),\n  // Since 2021-11-11 (#326)\n  openInterest: Type.Optional(YahooNumber),\n  // SOHO (#248)\n  beta: Type.Optional(YahooNumber)\n}, {\n  additionalProperties: Type.Any()\n});\n/*\n * [TODO] Fields seen in a query but not in this module yet:\n *\n *   - extendedMarketChange\n *   - extendedMarketChangePercent\n *   - extendedMarketPrice\n *   - extendedMarketTime\n *   - dayHigh (separate to regularMarketDayHigh, etc)\n *   - dayLow (separate to regularMarketDayLow, etc)\n *   - volume (separaet to regularMarketVolume, etc)\n *\n * i.e. on yahoo site, with ?fields=dayHigh,dayLow,etc.\n */\n/*\n * Guaranteed fields, even we don't ask for them\n */\nconst QuoteCryptoCurrency = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"CRYPTOCURRENCY\"),\n  circulatingSupply: YahooNumber,\n  fromCurrency: Type.String(),\n  // 'BTC'\n  toCurrency: Type.String(),\n  // 'USD=X'\n  lastMarket: Type.String(),\n  // 'CoinMarketCap'\n  coinImageUrl: Type.Optional(Type.String()),\n  // 'https://s.yimg.com/uc/fin/img/reports-thumbnails/1.png'\n  volume24Hr: Type.Optional(YahooNumber),\n  // 62631043072\n  volumeAllCurrencies: Type.Optional(YahooNumber),\n  // 62631043072\n  startDate: Type.Optional(YahooFinanceDate) // new Date(1367103600 * 1000)\n})]);\nconst QuoteCurrency = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"CURRENCY\")\n})]);\nconst QuoteEtf = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"ETF\")\n})]);\nconst QuoteEquity = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"EQUITY\"),\n  dividendRate: Type.Optional(Type.Number()),\n  dividendYield: Type.Optional(Type.Number())\n})]);\nconst QuoteFuture = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"FUTURE\"),\n  headSymbolAsString: Type.String(),\n  contractSymbol: Type.Boolean(),\n  underlyingExchangeSymbol: Type.String(),\n  expireDate: YahooFinanceDate,\n  expireIsoDate: YahooFinanceDate\n})]);\nconst QuoteIndex = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"INDEX\")\n})]);\nconst QuoteOption = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"OPTION\"),\n  strike: YahooNumber,\n  openInterest: YahooNumber,\n  expireDate: YahooNumber,\n  expireIsoDate: YahooNumber,\n  underlyingSymbol: Type.String()\n})]);\nconst QuoteMutualfund = Type.Composite([QuoteBase, Type.Object({\n  quoteType: Type.Literal(\"MUTUALFUND\")\n})]);\nconst QuoteSchema = Type.Union([QuoteCryptoCurrency, QuoteCurrency, QuoteEtf, QuoteEquity, QuoteFuture, QuoteIndex, QuoteMutualfund, QuoteOption]);\nconst QuoteFieldSchema = Type.KeyOf(QuoteSchema);\nconst ResultType = Type.Union([Type.Literal(\"array\"), Type.Literal(\"object\"), Type.Literal(\"map\")]);\nconst QuoteResponseArraySchema = Type.Array(QuoteSchema);\nexport const QuoteOptionsSchema = Type.Object({\n  fields: Type.Optional(Type.Array(QuoteFieldSchema)),\n  return: Type.Optional(ResultType)\n});\nconst QuoteOptionsWithReturnArraySchema = Type.Composite([QuoteOptionsSchema, Type.Object({\n  return: Type.Optional(Type.Literal(\"array\"))\n})]);\nconst QuoteOptionsWithReturnMapSchema = Type.Composite([QuoteOptionsSchema, Type.Object({\n  return: Type.Literal(\"map\")\n})]);\nconst QuoteOptionsWithReturnObjectSchema = Type.Composite([QuoteOptionsSchema, Type.Object({\n  return: Type.Literal(\"object\")\n})]);\nconst queryOptionsDefaults = {};\nexport default async function quote(query, queryOptionsOverrides, moduleOptions) {\n  const symbols = typeof query === \"string\" ? query : query.join(\",\");\n  const returnAs = queryOptionsOverrides && queryOptionsOverrides.return;\n  const results = await this._moduleExec({\n    moduleName: \"quote\",\n    query: {\n      url: \"https://${YF_QUERY_HOST}/v7/finance/quote\",\n      needsCrumb: true,\n      schema: QuoteOptionsSchema,\n      defaults: queryOptionsDefaults,\n      runtime: {\n        symbols\n      },\n      overrides: queryOptionsOverrides,\n      transformWith(queryOptions) {\n        // Options validation ensures this is a string[]\n        if (queryOptions.fields) queryOptions.fields.join(\",\");\n        // Don't pass this on to Yahoo\n        delete queryOptions.return;\n        return queryOptions;\n      }\n    },\n    result: {\n      schema: QuoteResponseArraySchema,\n      transformWith(rawResult) {\n        var _a;\n        // console.log({ rawResult: JSON.stringify(rawResult, null, 2) });\n        let results = (_a = rawResult === null || rawResult === void 0 ? void 0 : rawResult.quoteResponse) === null || _a === void 0 ? void 0 : _a.result;\n        if (!results || !Array.isArray(results)) throw new Error(\"Unexpected result: \" + JSON.stringify(rawResult));\n        // Filter out quoteType==='NONE'\n        // So that delisted stocks will be undefined just like symbol-not-found\n        results = results.filter(quote => (quote === null || quote === void 0 ? void 0 : quote.quoteType) !== \"NONE\");\n        return results;\n      }\n    },\n    moduleOptions\n  });\n  if (returnAs) {\n    switch (returnAs) {\n      case \"array\":\n        return results;\n      case \"object\":\n        {\n          const object = {};\n          for (const result of results) object[result.symbol] = result;\n          return object; // TODO: type\n        }\n      case \"map\":\n        {\n          const map = new Map();\n          for (const result of results) map.set(result.symbol, result);\n          return map; // TODO: type\n        }\n    }\n  } else {\n    // By default, match the query input shape (string or string[]).\n    return typeof query === \"string\" ? results[0] : results;\n  }\n}","map":{"version":3,"names":["Type","YahooDateInMs","YahooFinanceDate","YahooNumber","YahooTwoNumberRange","QuoteBase","Object","language","String","region","quoteType","typeDisp","Optional","quoteSourceName","triggerable","Boolean","currency","customPriceAlertConfidence","marketState","Union","Literal","tradeable","cryptoTradeable","exchange","shortName","longName","messageBoardId","exchangeTimezoneName","exchangeTimezoneShortName","gmtOffSetMilliseconds","market","esgPopulated","fiftyTwoWeekLowChange","fiftyTwoWeekLowChangePercent","fiftyTwoWeekRange","fiftyTwoWeekHighChange","fiftyTwoWeekHighChangePercent","fiftyTwoWeekLow","fiftyTwoWeekHigh","fiftyTwoWeekChangePercent","dividendDate","earningsTimestamp","earningsTimestampStart","earningsTimestampEnd","trailingAnnualDividendRate","trailingPE","trailingAnnualDividendYield","epsTrailingTwelveMonths","epsForward","epsCurrentYear","priceEpsCurrentYear","sharesOutstanding","bookValue","fiftyDayAverage","fiftyDayAverageChange","fiftyDayAverageChangePercent","twoHundredDayAverage","twoHundredDayAverageChange","twoHundredDayAverageChangePercent","marketCap","forwardPE","priceToBook","sourceInterval","exchangeDataDelayedBy","firstTradeDateMilliseconds","priceHint","postMarketChangePercent","postMarketTime","postMarketPrice","postMarketChange","regularMarketChange","regularMarketChangePercent","regularMarketTime","regularMarketPrice","regularMarketDayHigh","regularMarketDayRange","regularMarketDayLow","regularMarketVolume","regularMarketPreviousClose","preMarketChange","preMarketChangePercent","preMarketTime","preMarketPrice","bid","ask","bidSize","askSize","fullExchangeName","financialCurrency","regularMarketOpen","averageDailyVolume3Month","averageDailyVolume10Day","displayName","symbol","underlyingSymbol","ytdReturn","trailingThreeMonthReturns","trailingThreeMonthNavReturns","ipoExpectedDate","newListingDate","nameChangeDate","prevName","averageAnalystRating","pageViewGrowthWeekly","openInterest","beta","additionalProperties","Any","QuoteCryptoCurrency","Composite","circulatingSupply","fromCurrency","toCurrency","lastMarket","coinImageUrl","volume24Hr","volumeAllCurrencies","startDate","QuoteCurrency","QuoteEtf","QuoteEquity","dividendRate","Number","dividendYield","QuoteFuture","headSymbolAsString","contractSymbol","underlyingExchangeSymbol","expireDate","expireIsoDate","QuoteIndex","QuoteOption","strike","QuoteMutualfund","QuoteSchema","QuoteFieldSchema","KeyOf","ResultType","QuoteResponseArraySchema","Array","QuoteOptionsSchema","fields","return","QuoteOptionsWithReturnArraySchema","QuoteOptionsWithReturnMapSchema","QuoteOptionsWithReturnObjectSchema","queryOptionsDefaults","quote","query","queryOptionsOverrides","moduleOptions","symbols","join","returnAs","results","_moduleExec","moduleName","url","needsCrumb","schema","defaults","runtime","overrides","transformWith","queryOptions","result","rawResult","_a","quoteResponse","isArray","Error","JSON","stringify","filter","object","map","Map","set"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/dist/esm/src/modules/quote.js"],"sourcesContent":["import { Type } from \"@sinclair/typebox\";\nimport { YahooDateInMs, YahooFinanceDate, YahooNumber, YahooTwoNumberRange, } from \"../lib/yahooFinanceTypes.js\";\nexport const QuoteBase = Type.Object({\n    language: Type.String(), // \"en-US\",\n    region: Type.String(), // \"US\",\n    quoteType: Type.String(), // \"EQUITY\" | \"ETF\" | \"MUTUALFUND\";\n    typeDisp: Type.Optional(Type.String()), // \"Equity\", not always present.\n    quoteSourceName: Type.Optional(Type.String()), // \"Delayed Quote\",\n    triggerable: Type.Boolean(), // true,\n    currency: Type.Optional(Type.String()), // \"USD\",\n    // Seems to appear / disappear based not on symbol but network load (#445)\n    customPriceAlertConfidence: Type.Optional(Type.String()), // \"HIGH\" | \"LOW\"; TODO: anything else?\n    marketState: Type.Union([\n        Type.Literal(\"REGULAR\"),\n        Type.Literal(\"CLOSED\"),\n        Type.Literal(\"PRE\"),\n        Type.Literal(\"PREPRE\"),\n        Type.Literal(\"POST\"),\n        Type.Literal(\"POSTPOST\"),\n    ]),\n    tradeable: Type.Boolean(), // false,\n    cryptoTradeable: Type.Optional(Type.Boolean()), // false\n    exchange: Type.String(), // \"NMS\",\n    shortName: Type.Optional(Type.String()), // \"NVIDIA Corporation\",\n    longName: Type.Optional(Type.String()), // \"NVIDIA Corporation\",\n    messageBoardId: Type.Optional(Type.String()), // \"finmb_32307\",\n    exchangeTimezoneName: Type.String(), // \"America/New_York\",\n    exchangeTimezoneShortName: Type.String(), // \"EST\",\n    gmtOffSetMilliseconds: YahooNumber, // -18000000,\n    market: Type.String(), // \"us_market\",\n    esgPopulated: Type.Boolean(), // false,\n    fiftyTwoWeekLowChange: Type.Optional(YahooNumber), // 362.96002,\n    fiftyTwoWeekLowChangePercent: Type.Optional(YahooNumber), // 2.0088556,\n    fiftyTwoWeekRange: Type.Optional(YahooTwoNumberRange), // \"180.68 - 589.07\" -> { low, high }\n    fiftyTwoWeekHighChange: Type.Optional(YahooNumber), // -45.429993,\n    fiftyTwoWeekHighChangePercent: Type.Optional(YahooNumber), // -0.07712155,\n    fiftyTwoWeekLow: Type.Optional(YahooNumber), // 180.68,\n    fiftyTwoWeekHigh: Type.Optional(YahooNumber), // 589.07,\n    fiftyTwoWeekChangePercent: Type.Optional(YahooNumber), // 22.604025\n    dividendDate: Type.Optional(YahooFinanceDate), // 1609200000,\n    // maybe always present on EQUITY?\n    earningsTimestamp: Type.Optional(YahooFinanceDate), // 1614200400,\n    earningsTimestampStart: Type.Optional(YahooFinanceDate), // 1614200400,\n    earningsTimestampEnd: Type.Optional(YahooFinanceDate), // 1614200400,\n    trailingAnnualDividendRate: Type.Optional(YahooNumber), // 0.64,\n    trailingPE: Type.Optional(YahooNumber), // 88.873634,\n    trailingAnnualDividendYield: Type.Optional(YahooNumber), // 0.0011709387,\n    epsTrailingTwelveMonths: Type.Optional(YahooNumber), // 6.117,\n    epsForward: Type.Optional(YahooNumber), // 11.68,\n    epsCurrentYear: Type.Optional(YahooNumber), // 9.72,\n    priceEpsCurrentYear: Type.Optional(YahooNumber), // 55.930042,\n    sharesOutstanding: Type.Optional(YahooNumber), // 619000000,\n    bookValue: Type.Optional(YahooNumber), // 24.772,\n    fiftyDayAverage: Type.Optional(YahooNumber), // 530.8828,\n    fiftyDayAverageChange: Type.Optional(YahooNumber), // 12.757202,\n    fiftyDayAverageChangePercent: Type.Optional(YahooNumber), // 0.024030166,\n    twoHundredDayAverage: Type.Optional(YahooNumber), // 515.8518,\n    twoHundredDayAverageChange: Type.Optional(YahooNumber), // 27.788208,\n    twoHundredDayAverageChangePercent: Type.Optional(YahooNumber), // 0.053868588,\n    marketCap: Type.Optional(YahooNumber), // 336513171456,\n    forwardPE: Type.Optional(YahooNumber), // 46.54452,\n    priceToBook: Type.Optional(YahooNumber), // 21.945745,\n    sourceInterval: YahooNumber, // 15,\n    exchangeDataDelayedBy: YahooNumber, // 0,\n    firstTradeDateMilliseconds: Type.Optional(YahooDateInMs), // 917015400000 -> Date\n    priceHint: YahooNumber, // 2,\n    postMarketChangePercent: Type.Optional(YahooNumber), // 0.093813874,\n    postMarketTime: Type.Optional(YahooFinanceDate), // 1612573179 -> new Date()\n    postMarketPrice: Type.Optional(YahooNumber), // 544.15,\n    postMarketChange: Type.Optional(YahooNumber), // 0.51000977,\n    regularMarketChange: Type.Optional(YahooNumber), // -2.9299927,\n    regularMarketChangePercent: Type.Optional(YahooNumber), // -0.53606904,\n    regularMarketTime: Type.Optional(YahooFinanceDate), // 1612558802 -> new Date()\n    regularMarketPrice: Type.Optional(YahooNumber), // 543.64,\n    regularMarketDayHigh: Type.Optional(YahooNumber), // 549.19,\n    regularMarketDayRange: Type.Optional(YahooTwoNumberRange), // \"541.867 - 549.19\" -> { low, high }\n    regularMarketDayLow: Type.Optional(YahooNumber), // 541.867,\n    regularMarketVolume: Type.Optional(YahooNumber), // 4228841,\n    regularMarketPreviousClose: Type.Optional(YahooNumber), // 546.57,\n    preMarketChange: Type.Optional(YahooNumber), // -2.9299927,\n    preMarketChangePercent: Type.Optional(YahooNumber), // -0.53606904,\n    preMarketTime: Type.Optional(YahooFinanceDate), // 1612558802 -> new Date()\n    preMarketPrice: Type.Optional(YahooNumber), // 543.64,\n    bid: Type.Optional(YahooNumber), // 543.84,\n    ask: Type.Optional(YahooNumber), // 544.15,\n    bidSize: Type.Optional(YahooNumber), // 18,\n    askSize: Type.Optional(YahooNumber), // 8,\n    fullExchangeName: Type.String(), // \"NasdaqGS\",\n    financialCurrency: Type.Optional(Type.String()), // \"USD\",\n    regularMarketOpen: Type.Optional(YahooNumber), // 549.0,\n    averageDailyVolume3Month: Type.Optional(YahooNumber), // 7475022,\n    averageDailyVolume10Day: Type.Optional(YahooNumber), // 5546385,\n    displayName: Type.Optional(Type.String()), // \"NVIDIA\",\n    symbol: Type.String(), // \"NVDA\"\n    underlyingSymbol: Type.Optional(Type.String()), // \"LD.MI\" (for LDO.MI, #363)\n    // only on ETF?  not on EQUITY?\n    ytdReturn: Type.Optional(YahooNumber), // 0.31\n    trailingThreeMonthReturns: Type.Optional(YahooNumber), // 16.98\n    trailingThreeMonthNavReturns: Type.Optional(YahooNumber), // 17.08\n    ipoExpectedDate: Type.Optional(YahooFinanceDate), // \"2020-08-13\",\n    newListingDate: Type.Optional(YahooFinanceDate), // \"2021-02-16\",\n    nameChangeDate: Type.Optional(YahooFinanceDate),\n    prevName: Type.Optional(Type.String()),\n    averageAnalystRating: Type.Optional(Type.String()),\n    pageViewGrowthWeekly: Type.Optional(YahooNumber), // Since 2021-11-11 (#326)\n    openInterest: Type.Optional(YahooNumber), // SOHO (#248)\n    beta: Type.Optional(YahooNumber),\n}, {\n    additionalProperties: Type.Any(),\n});\n/*\n * [TODO] Fields seen in a query but not in this module yet:\n *\n *   - extendedMarketChange\n *   - extendedMarketChangePercent\n *   - extendedMarketPrice\n *   - extendedMarketTime\n *   - dayHigh (separate to regularMarketDayHigh, etc)\n *   - dayLow (separate to regularMarketDayLow, etc)\n *   - volume (separaet to regularMarketVolume, etc)\n *\n * i.e. on yahoo site, with ?fields=dayHigh,dayLow,etc.\n */\n/*\n * Guaranteed fields, even we don't ask for them\n */\nconst QuoteCryptoCurrency = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"CRYPTOCURRENCY\"),\n        circulatingSupply: YahooNumber,\n        fromCurrency: Type.String(), // 'BTC'\n        toCurrency: Type.String(), // 'USD=X'\n        lastMarket: Type.String(), // 'CoinMarketCap'\n        coinImageUrl: Type.Optional(Type.String()), // 'https://s.yimg.com/uc/fin/img/reports-thumbnails/1.png'\n        volume24Hr: Type.Optional(YahooNumber), // 62631043072\n        volumeAllCurrencies: Type.Optional(YahooNumber), // 62631043072\n        startDate: Type.Optional(YahooFinanceDate), // new Date(1367103600 * 1000)\n    }),\n]);\nconst QuoteCurrency = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"CURRENCY\"),\n    }),\n]);\nconst QuoteEtf = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"ETF\"),\n    }),\n]);\nconst QuoteEquity = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"EQUITY\"),\n        dividendRate: Type.Optional(Type.Number()),\n        dividendYield: Type.Optional(Type.Number()),\n    }),\n]);\nconst QuoteFuture = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"FUTURE\"),\n        headSymbolAsString: Type.String(),\n        contractSymbol: Type.Boolean(),\n        underlyingExchangeSymbol: Type.String(),\n        expireDate: YahooFinanceDate,\n        expireIsoDate: YahooFinanceDate,\n    }),\n]);\nconst QuoteIndex = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"INDEX\"),\n    }),\n]);\nconst QuoteOption = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"OPTION\"),\n        strike: YahooNumber,\n        openInterest: YahooNumber,\n        expireDate: YahooNumber,\n        expireIsoDate: YahooNumber,\n        underlyingSymbol: Type.String(),\n    }),\n]);\nconst QuoteMutualfund = Type.Composite([\n    QuoteBase,\n    Type.Object({\n        quoteType: Type.Literal(\"MUTUALFUND\"),\n    }),\n]);\nconst QuoteSchema = Type.Union([\n    QuoteCryptoCurrency,\n    QuoteCurrency,\n    QuoteEtf,\n    QuoteEquity,\n    QuoteFuture,\n    QuoteIndex,\n    QuoteMutualfund,\n    QuoteOption,\n]);\nconst QuoteFieldSchema = Type.KeyOf(QuoteSchema);\nconst ResultType = Type.Union([\n    Type.Literal(\"array\"),\n    Type.Literal(\"object\"),\n    Type.Literal(\"map\"),\n]);\nconst QuoteResponseArraySchema = Type.Array(QuoteSchema);\nexport const QuoteOptionsSchema = Type.Object({\n    fields: Type.Optional(Type.Array(QuoteFieldSchema)),\n    return: Type.Optional(ResultType),\n});\nconst QuoteOptionsWithReturnArraySchema = Type.Composite([\n    QuoteOptionsSchema,\n    Type.Object({\n        return: Type.Optional(Type.Literal(\"array\")),\n    }),\n]);\nconst QuoteOptionsWithReturnMapSchema = Type.Composite([\n    QuoteOptionsSchema,\n    Type.Object({\n        return: Type.Literal(\"map\"),\n    }),\n]);\nconst QuoteOptionsWithReturnObjectSchema = Type.Composite([\n    QuoteOptionsSchema,\n    Type.Object({\n        return: Type.Literal(\"object\"),\n    }),\n]);\nconst queryOptionsDefaults = {};\nexport default async function quote(query, queryOptionsOverrides, moduleOptions) {\n    const symbols = typeof query === \"string\" ? query : query.join(\",\");\n    const returnAs = queryOptionsOverrides && queryOptionsOverrides.return;\n    const results = await this._moduleExec({\n        moduleName: \"quote\",\n        query: {\n            url: \"https://${YF_QUERY_HOST}/v7/finance/quote\",\n            needsCrumb: true,\n            schema: QuoteOptionsSchema,\n            defaults: queryOptionsDefaults,\n            runtime: { symbols },\n            overrides: queryOptionsOverrides,\n            transformWith(queryOptions) {\n                // Options validation ensures this is a string[]\n                if (queryOptions.fields)\n                    queryOptions.fields.join(\",\");\n                // Don't pass this on to Yahoo\n                delete queryOptions.return;\n                return queryOptions;\n            },\n        },\n        result: {\n            schema: QuoteResponseArraySchema,\n            transformWith(rawResult) {\n                var _a;\n                // console.log({ rawResult: JSON.stringify(rawResult, null, 2) });\n                let results = (_a = rawResult === null || rawResult === void 0 ? void 0 : rawResult.quoteResponse) === null || _a === void 0 ? void 0 : _a.result;\n                if (!results || !Array.isArray(results))\n                    throw new Error(\"Unexpected result: \" + JSON.stringify(rawResult));\n                // Filter out quoteType==='NONE'\n                // So that delisted stocks will be undefined just like symbol-not-found\n                results = results.filter((quote) => (quote === null || quote === void 0 ? void 0 : quote.quoteType) !== \"NONE\");\n                return results;\n            },\n        },\n        moduleOptions,\n    });\n    if (returnAs) {\n        switch (returnAs) {\n            case \"array\":\n                return results;\n            case \"object\": {\n                const object = {};\n                for (const result of results)\n                    object[result.symbol] = result;\n                return object; // TODO: type\n            }\n            case \"map\": {\n                const map = new Map();\n                for (const result of results)\n                    map.set(result.symbol, result);\n                return map; // TODO: type\n            }\n        }\n    }\n    else {\n        // By default, match the query input shape (string or string[]).\n        return typeof query === \"string\"\n            ? results[0]\n            : results;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}