{"ast":null,"code":"import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { OmitFromMappedKey } from './omit-from-mapped-key.mjs';\nimport { OmitFromMappedResult } from './omit-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsIntersect, IsUnion, IsObject, IsSchema, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromIntersect(T, K) {\n  return T.map(T => OmitResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n  return T.map(T => OmitResolve(T, K));\n}\n// ------------------------------------------------------------------\n// FromProperty\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromProperty(T, K) {\n  const {\n    [K]: _,\n    ...R\n  } = T;\n  return R;\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n  return K.reduce((T, K2) => FromProperty(T, K2), T);\n}\n// ------------------------------------------------------------------\n// OmitResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction OmitResolve(T, K) {\n  return IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) : IsUnion(T) ? Union(FromUnion(T.anyOf, K)) : IsObject(T) ? Object(FromProperties(T.properties, K)) : Object({});\n}\nexport function Omit(T, K, options = {}) {\n  // mapped\n  if (IsMappedKey(K)) return OmitFromMappedKey(T, K, options);\n  if (IsMappedResult(T)) return OmitFromMappedResult(T, K, options);\n  // non-mapped\n  const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n  const D = Discard(T, [TransformKind, '$id', 'required']);\n  const R = CloneType(OmitResolve(T, I), options);\n  return {\n    ...D,\n    ...R\n  };\n}","map":{"version":3,"names":["Intersect","Union","Object","IndexPropertyKeys","Discard","TransformKind","CloneType","OmitFromMappedKey","OmitFromMappedResult","IsMappedKey","IsIntersect","IsUnion","IsObject","IsSchema","IsMappedResult","FromIntersect","T","K","map","OmitResolve","FromUnion","FromProperty","_","R","FromProperties","reduce","K2","allOf","anyOf","properties","Omit","options","I","D"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs"],"sourcesContent":["import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { OmitFromMappedKey } from './omit-from-mapped-key.mjs';\nimport { OmitFromMappedResult } from './omit-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsIntersect, IsUnion, IsObject, IsSchema, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromIntersect(T, K) {\n    return T.map((T) => OmitResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return T.map((T) => OmitResolve(T, K));\n}\n// ------------------------------------------------------------------\n// FromProperty\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromProperty(T, K) {\n    const { [K]: _, ...R } = T;\n    return R;\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n    return K.reduce((T, K2) => FromProperty(T, K2), T);\n}\n// ------------------------------------------------------------------\n// OmitResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction OmitResolve(T, K) {\n    return (IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) :\n        IsUnion(T) ? Union(FromUnion(T.anyOf, K)) :\n            IsObject(T) ? Object(FromProperties(T.properties, K)) :\n                Object({}));\n}\nexport function Omit(T, K, options = {}) {\n    // mapped\n    if (IsMappedKey(K))\n        return OmitFromMappedKey(T, K, options);\n    if (IsMappedResult(T))\n        return OmitFromMappedResult(T, K, options);\n    // non-mapped\n    const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(OmitResolve(T, I), options);\n    return { ...D, ...R };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAClD,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE;AACA;AACA;AACA,SAASC,WAAW,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,mBAAmB;AACzG;AACA,SAASC,aAAaA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOD,CAAC,CAACE,GAAG,CAAEF,CAAC,IAAKG,WAAW,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC;AAC1C;AACA;AACA,SAASG,SAASA,CAACJ,CAAC,EAAEC,CAAC,EAAE;EACrB,OAAOD,CAAC,CAACE,GAAG,CAAEF,CAAC,IAAKG,WAAW,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA,SAASI,YAAYA,CAACL,CAAC,EAAEC,CAAC,EAAE;EACxB,MAAM;IAAE,CAACA,CAAC,GAAGK,CAAC;IAAE,GAAGC;EAAE,CAAC,GAAGP,CAAC;EAC1B,OAAOO,CAAC;AACZ;AACA;AACA,SAASC,cAAcA,CAACR,CAAC,EAAEC,CAAC,EAAE;EAC1B,OAAOA,CAAC,CAACQ,MAAM,CAAC,CAACT,CAAC,EAAEU,EAAE,KAAKL,YAAY,CAACL,CAAC,EAAEU,EAAE,CAAC,EAAEV,CAAC,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA,SAASG,WAAWA,CAACH,CAAC,EAAEC,CAAC,EAAE;EACvB,OAAQP,WAAW,CAACM,CAAC,CAAC,GAAGhB,SAAS,CAACe,aAAa,CAACC,CAAC,CAACW,KAAK,EAAEV,CAAC,CAAC,CAAC,GACzDN,OAAO,CAACK,CAAC,CAAC,GAAGf,KAAK,CAACmB,SAAS,CAACJ,CAAC,CAACY,KAAK,EAAEX,CAAC,CAAC,CAAC,GACrCL,QAAQ,CAACI,CAAC,CAAC,GAAGd,MAAM,CAACsB,cAAc,CAACR,CAAC,CAACa,UAAU,EAAEZ,CAAC,CAAC,CAAC,GACjDf,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,OAAO,SAAS4B,IAAIA,CAACd,CAAC,EAAEC,CAAC,EAAEc,OAAO,GAAG,CAAC,CAAC,EAAE;EACrC;EACA,IAAItB,WAAW,CAACQ,CAAC,CAAC,EACd,OAAOV,iBAAiB,CAACS,CAAC,EAAEC,CAAC,EAAEc,OAAO,CAAC;EAC3C,IAAIjB,cAAc,CAACE,CAAC,CAAC,EACjB,OAAOR,oBAAoB,CAACQ,CAAC,EAAEC,CAAC,EAAEc,OAAO,CAAC;EAC9C;EACA,MAAMC,CAAC,GAAGnB,QAAQ,CAACI,CAAC,CAAC,GAAGd,iBAAiB,CAACc,CAAC,CAAC,GAAGA,CAAC;EAChD,MAAMgB,CAAC,GAAG7B,OAAO,CAACY,CAAC,EAAE,CAACX,aAAa,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;EACxD,MAAMkB,CAAC,GAAGjB,SAAS,CAACa,WAAW,CAACH,CAAC,EAAEgB,CAAC,CAAC,EAAED,OAAO,CAAC;EAC/C,OAAO;IAAE,GAAGE,CAAC;IAAE,GAAGV;EAAE,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}