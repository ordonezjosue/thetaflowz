{"ast":null,"code":"import { Kind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\n// evaluation types\nimport { Array } from '../array/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// operator\nimport { SetIncludes } from '../sets/index.mjs';\n// mapping types\nimport { MappedResult } from './mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsAsyncIterator, IsConstructor, IsFunction, IsIntersect, IsIterator, IsReadonly, IsMappedResult, IsMappedKey, IsObject, IsOptional, IsPromise, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromMappedResult(K, P) {\n  return K in P ? FromSchemaType(K, P[K]) : MappedResult(P);\n}\n// prettier-ignore\nfunction MappedKeyToKnownMappedResultProperties(K) {\n  return {\n    [K]: Literal(K)\n  };\n}\n// prettier-ignore\nfunction MappedKeyToUnknownMappedResultProperties(P) {\n  const Acc = {};\n  for (const L of P) Acc[L] = Literal(L);\n  return Acc;\n}\n// prettier-ignore\nfunction MappedKeyToMappedResultProperties(K, P) {\n  return SetIncludes(P, K) ? MappedKeyToKnownMappedResultProperties(K) : MappedKeyToUnknownMappedResultProperties(P);\n}\n// prettier-ignore\nfunction FromMappedKey(K, P) {\n  const R = MappedKeyToMappedResultProperties(K, P);\n  return FromMappedResult(K, R);\n}\n// prettier-ignore\nfunction FromRest(K, T) {\n  return T.map(L => FromSchemaType(K, L));\n}\n// prettier-ignore\nfunction FromProperties(K, T) {\n  const Acc = {};\n  for (const K2 of globalThis.Object.getOwnPropertyNames(T)) Acc[K2] = FromSchemaType(K, T[K2]);\n  return Acc;\n}\n// prettier-ignore\nfunction FromSchemaType(K, T) {\n  return (\n    // unevaluated modifier types\n    IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) : IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) :\n    // unevaluated mapped types\n    IsMappedResult(T) ? FromMappedResult(K, T.properties) : IsMappedKey(T) ? FromMappedKey(K, T.keys) :\n    // unevaluated types\n    IsConstructor(T) ? Constructor(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) : IsFunction(T) ? FunctionType(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) : IsAsyncIterator(T) ? AsyncIterator(FromSchemaType(K, T.items)) : IsIterator(T) ? Iterator(FromSchemaType(K, T.items)) : IsIntersect(T) ? Intersect(FromRest(K, T.allOf)) : IsUnion(T) ? Union(FromRest(K, T.anyOf)) : IsTuple(T) ? Tuple(FromRest(K, T.items ?? [])) : IsObject(T) ? Object(FromProperties(K, T.properties)) : IsArray(T) ? Array(FromSchemaType(K, T.items)) : IsPromise(T) ? Promise(FromSchemaType(K, T.item)) : T\n  );\n}\n// prettier-ignore\nexport function MappedFunctionReturnType(K, T) {\n  const Acc = {};\n  for (const L of K) Acc[L] = FromSchemaType(L, T);\n  return Acc;\n}\n/** `[Json]` Creates a Mapped object type */\nexport function Mapped(key, map, options = {}) {\n  const K = IsSchema(key) ? IndexPropertyKeys(key) : key;\n  const RT = map({\n    [Kind]: 'MappedKey',\n    keys: K\n  });\n  const R = MappedFunctionReturnType(K, RT);\n  return CloneType(Object(R), options);\n}","map":{"version":3,"names":["Kind","OptionalKind","ReadonlyKind","CloneType","Discard","Array","AsyncIterator","Constructor","Function","FunctionType","IndexPropertyKeys","Intersect","Iterator","Literal","Object","Optional","Promise","Readonly","Tuple","Union","SetIncludes","MappedResult","IsArray","IsAsyncIterator","IsConstructor","IsFunction","IsIntersect","IsIterator","IsReadonly","IsMappedResult","IsMappedKey","IsObject","IsOptional","IsPromise","IsSchema","IsTuple","IsUnion","FromMappedResult","K","P","FromSchemaType","MappedKeyToKnownMappedResultProperties","MappedKeyToUnknownMappedResultProperties","Acc","L","MappedKeyToMappedResultProperties","FromMappedKey","R","FromRest","T","map","FromProperties","K2","globalThis","getOwnPropertyNames","properties","keys","parameters","returns","items","allOf","anyOf","item","MappedFunctionReturnType","Mapped","key","options","RT"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs"],"sourcesContent":["import { Kind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\n// evaluation types\nimport { Array } from '../array/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// operator\nimport { SetIncludes } from '../sets/index.mjs';\n// mapping types\nimport { MappedResult } from './mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsAsyncIterator, IsConstructor, IsFunction, IsIntersect, IsIterator, IsReadonly, IsMappedResult, IsMappedKey, IsObject, IsOptional, IsPromise, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromMappedResult(K, P) {\n    return (K in P\n        ? FromSchemaType(K, P[K])\n        : MappedResult(P));\n}\n// prettier-ignore\nfunction MappedKeyToKnownMappedResultProperties(K) {\n    return { [K]: Literal(K) };\n}\n// prettier-ignore\nfunction MappedKeyToUnknownMappedResultProperties(P) {\n    const Acc = {};\n    for (const L of P)\n        Acc[L] = Literal(L);\n    return Acc;\n}\n// prettier-ignore\nfunction MappedKeyToMappedResultProperties(K, P) {\n    return (SetIncludes(P, K)\n        ? MappedKeyToKnownMappedResultProperties(K)\n        : MappedKeyToUnknownMappedResultProperties(P));\n}\n// prettier-ignore\nfunction FromMappedKey(K, P) {\n    const R = MappedKeyToMappedResultProperties(K, P);\n    return FromMappedResult(K, R);\n}\n// prettier-ignore\nfunction FromRest(K, T) {\n    return T.map(L => FromSchemaType(K, L));\n}\n// prettier-ignore\nfunction FromProperties(K, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K2] = FromSchemaType(K, T[K2]);\n    return Acc;\n}\n// prettier-ignore\nfunction FromSchemaType(K, T) {\n    return (\n    // unevaluated modifier types\n    IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) :\n        IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) :\n            // unevaluated mapped types\n            IsMappedResult(T) ? FromMappedResult(K, T.properties) :\n                IsMappedKey(T) ? FromMappedKey(K, T.keys) :\n                    // unevaluated types\n                    IsConstructor(T) ? Constructor(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) :\n                        IsFunction(T) ? FunctionType(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) :\n                            IsAsyncIterator(T) ? AsyncIterator(FromSchemaType(K, T.items)) :\n                                IsIterator(T) ? Iterator(FromSchemaType(K, T.items)) :\n                                    IsIntersect(T) ? Intersect(FromRest(K, T.allOf)) :\n                                        IsUnion(T) ? Union(FromRest(K, T.anyOf)) :\n                                            IsTuple(T) ? Tuple(FromRest(K, T.items ?? [])) :\n                                                IsObject(T) ? Object(FromProperties(K, T.properties)) :\n                                                    IsArray(T) ? Array(FromSchemaType(K, T.items)) :\n                                                        IsPromise(T) ? Promise(FromSchemaType(K, T.item)) :\n                                                            T);\n}\n// prettier-ignore\nexport function MappedFunctionReturnType(K, T) {\n    const Acc = {};\n    for (const L of K)\n        Acc[L] = FromSchemaType(L, T);\n    return Acc;\n}\n/** `[Json]` Creates a Mapped object type */\nexport function Mapped(key, map, options = {}) {\n    const K = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const RT = map({ [Kind]: 'MappedKey', keys: K });\n    const R = MappedFunctionReturnType(K, RT);\n    return CloneType(Object(R), options);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}