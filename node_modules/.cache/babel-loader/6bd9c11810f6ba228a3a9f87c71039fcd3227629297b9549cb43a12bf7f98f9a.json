{"ast":null,"code":"/** Returns true if element right is in the set of left */\n// prettier-ignore\nexport function SetIncludes(T, S) {\n  return T.includes(S);\n}\n/** Returns true if left is a subset of right */\nexport function SetIsSubset(T, S) {\n  return T.every(L => SetIncludes(S, L));\n}\n/** Returns a distinct set of elements */\nexport function SetDistinct(T) {\n  return [...new Set(T)];\n}\n/** Returns the Intersect of the given sets */\nexport function SetIntersect(T, S) {\n  return T.filter(L => S.includes(L));\n}\n/** Returns the Union of the given sets */\nexport function SetUnion(T, S) {\n  return [...T, ...S];\n}\n/** Returns the Complement by omitting elements in T that are in S */\n// prettier-ignore\nexport function SetComplement(T, S) {\n  return T.filter(L => !S.includes(L));\n}\n// prettier-ignore\nfunction SetIntersectManyResolve(T, Init) {\n  return T.reduce((Acc, L) => {\n    return SetIntersect(Acc, L);\n  }, Init);\n}\n// prettier-ignore\nexport function SetIntersectMany(T) {\n  return T.length === 1 ? T[0]\n  // Use left to initialize the accumulator for resolve\n  : T.length > 1 ? SetIntersectManyResolve(T.slice(1), T[0]) : [];\n}\n/** Returns the Union of multiple sets */\nexport function SetUnionMany(T) {\n  const Acc = [];\n  for (const L of T) Acc.push(...L);\n  return Acc;\n}","map":{"version":3,"names":["SetIncludes","T","S","includes","SetIsSubset","every","L","SetDistinct","Set","SetIntersect","filter","SetUnion","SetComplement","SetIntersectManyResolve","Init","reduce","Acc","SetIntersectMany","length","slice","SetUnionMany","push"],"sources":["C:/Users/ordon/ThetaFlowz_Cursor/node_modules/yahoo-finance2/node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs"],"sourcesContent":["/** Returns true if element right is in the set of left */\n// prettier-ignore\nexport function SetIncludes(T, S) {\n    return T.includes(S);\n}\n/** Returns true if left is a subset of right */\nexport function SetIsSubset(T, S) {\n    return T.every((L) => SetIncludes(S, L));\n}\n/** Returns a distinct set of elements */\nexport function SetDistinct(T) {\n    return [...new Set(T)];\n}\n/** Returns the Intersect of the given sets */\nexport function SetIntersect(T, S) {\n    return T.filter((L) => S.includes(L));\n}\n/** Returns the Union of the given sets */\nexport function SetUnion(T, S) {\n    return [...T, ...S];\n}\n/** Returns the Complement by omitting elements in T that are in S */\n// prettier-ignore\nexport function SetComplement(T, S) {\n    return T.filter(L => !S.includes(L));\n}\n// prettier-ignore\nfunction SetIntersectManyResolve(T, Init) {\n    return T.reduce((Acc, L) => {\n        return SetIntersect(Acc, L);\n    }, Init);\n}\n// prettier-ignore\nexport function SetIntersectMany(T) {\n    return (T.length === 1\n        ? T[0]\n        // Use left to initialize the accumulator for resolve\n        : T.length > 1\n            ? SetIntersectManyResolve(T.slice(1), T[0])\n            : []);\n}\n/** Returns the Union of multiple sets */\nexport function SetUnionMany(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...L);\n    return Acc;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC9B,OAAOD,CAAC,CAACE,QAAQ,CAACD,CAAC,CAAC;AACxB;AACA;AACA,OAAO,SAASE,WAAWA,CAACH,CAAC,EAAEC,CAAC,EAAE;EAC9B,OAAOD,CAAC,CAACI,KAAK,CAAEC,CAAC,IAAKN,WAAW,CAACE,CAAC,EAAEI,CAAC,CAAC,CAAC;AAC5C;AACA;AACA,OAAO,SAASC,WAAWA,CAACN,CAAC,EAAE;EAC3B,OAAO,CAAC,GAAG,IAAIO,GAAG,CAACP,CAAC,CAAC,CAAC;AAC1B;AACA;AACA,OAAO,SAASQ,YAAYA,CAACR,CAAC,EAAEC,CAAC,EAAE;EAC/B,OAAOD,CAAC,CAACS,MAAM,CAAEJ,CAAC,IAAKJ,CAAC,CAACC,QAAQ,CAACG,CAAC,CAAC,CAAC;AACzC;AACA;AACA,OAAO,SAASK,QAAQA,CAACV,CAAC,EAAEC,CAAC,EAAE;EAC3B,OAAO,CAAC,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC;AACvB;AACA;AACA;AACA,OAAO,SAASU,aAAaA,CAACX,CAAC,EAAEC,CAAC,EAAE;EAChC,OAAOD,CAAC,CAACS,MAAM,CAACJ,CAAC,IAAI,CAACJ,CAAC,CAACC,QAAQ,CAACG,CAAC,CAAC,CAAC;AACxC;AACA;AACA,SAASO,uBAAuBA,CAACZ,CAAC,EAAEa,IAAI,EAAE;EACtC,OAAOb,CAAC,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEV,CAAC,KAAK;IACxB,OAAOG,YAAY,CAACO,GAAG,EAAEV,CAAC,CAAC;EAC/B,CAAC,EAAEQ,IAAI,CAAC;AACZ;AACA;AACA,OAAO,SAASG,gBAAgBA,CAAChB,CAAC,EAAE;EAChC,OAAQA,CAAC,CAACiB,MAAM,KAAK,CAAC,GAChBjB,CAAC,CAAC,CAAC;EACL;EAAA,EACEA,CAAC,CAACiB,MAAM,GAAG,CAAC,GACRL,uBAAuB,CAACZ,CAAC,CAACkB,KAAK,CAAC,CAAC,CAAC,EAAElB,CAAC,CAAC,CAAC,CAAC,CAAC,GACzC,EAAE;AAChB;AACA;AACA,OAAO,SAASmB,YAAYA,CAACnB,CAAC,EAAE;EAC5B,MAAMe,GAAG,GAAG,EAAE;EACd,KAAK,MAAMV,CAAC,IAAIL,CAAC,EACbe,GAAG,CAACK,IAAI,CAAC,GAAGf,CAAC,CAAC;EAClB,OAAOU,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}